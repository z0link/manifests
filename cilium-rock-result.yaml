---
# Source: cilium/templates/cilium-secrets-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-envoy/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-envoy"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
automountServiceAccountToken: false
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpQZkpOYjR2Vk9ydHdjenprUkkxdFl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TlZvWERUSTRNREl3TlRFNQpNRFl4TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4Q3RoZmJpVXd2MGhJdHRTWTBOc2JiWWU0QjVZakpCZ0t2VmRjTVVzSzRnNVAvWUsKcnR1WXFKdzYwNUw5QVVlUnpKLzh5ajluUHVFQmNnY1BYMGIyNVVCNk5KNzVrdHU4ZkhwK3BGanBuMmtHRzV6Tgpnc001UWNwQUFETlBZQ3BZeUtiWGtDcEFMRXBCbEM2RGlWKzdFeE5BYXBkQ1Avd29zaWFvekZrVmpDMld2ZHlWClN3dXBBVGxQM09QZ3FnWTIxQ1A0VlNUbWRyOW12VG5NWGV6b2wwSnFmeFdhTnZ5aS8zVjAyMlpla1NvMDNGenQKY1dpN09RRnpxaEdEZzdnbW9kUkpVdFhpTEc3RklVS1Z6ZHpFTmZnRk9ZVjVVSENHdktNL1NqdU9ySXltSzYyVgp1Vm8vVVJaMWpiclI4VXlYNHZWUFFCek9xcldhUkloZjd6RzdPd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSGVtMWJ2QXJNMkRIcmRndU44anl6bW56ampJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0F6SG4vUkxqVjJaMmJmZnBqallIOVE1Q25VakRaY055WUQvMFpSMXQwa1NwNUdyS2NvNmlwCkhFVGpoaHNjdDRhQTVkZ0xxa081d1d5TWFiVzJLeFRhWTVPSkw1NzJyeU5vTmNTVklIcjQySFFzWEdoMi9oQTEKU3h6dTBUSHFHQzRGNWtCTGQ1U05VK0pndnlZZnBhdHBvOHBtR3FFWFc3aWxsQjh0V1EwUFZWc2xTVCtLK1ZKNgo5bU96eFF4TUtsN2lsVGtndmtkbE54c1ZCQ3plMDViOVFhcEZHT0l3K210czNxRldHNmVyVTJwNGxrRFRRczVFClp0VGlQYUEvVUlNdXNXelhvbWtPT0lrRXp3bGlvRXBxZGdEUkN2WFB2SmdNVGNDd09lMnFIaHJ5WHBDcFhYSVQKVm1KYzR1VDZoVVpnYW13Z2RzWjIvR29obDgzUG50Q2UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeEN0aGZiaVV3djBoSXR0U1kwTnNiYlllNEI1WWpKQmdLdlZkY01Vc0s0ZzVQL1lLCnJ0dVlxSnc2MDVMOUFVZVJ6Si84eWo5blB1RUJjZ2NQWDBiMjVVQjZOSjc1a3R1OGZIcCtwRmpwbjJrR0c1ek4KZ3NNNVFjcEFBRE5QWUNwWXlLYlhrQ3BBTEVwQmxDNkRpVis3RXhOQWFwZENQL3dvc2lhb3pGa1ZqQzJXdmR5VgpTd3VwQVRsUDNPUGdxZ1kyMUNQNFZTVG1kcjltdlRuTVhlem9sMEpxZnhXYU52eWkvM1YwMjJaZWtTbzAzRnp0CmNXaTdPUUZ6cWhHRGc3Z21vZFJKVXRYaUxHN0ZJVUtWemR6RU5mZ0ZPWVY1VUhDR3ZLTS9TanVPckl5bUs2MlYKdVZvL1VSWjFqYnJSOFV5WDR2VlBRQnpPcXJXYVJJaGY3ekc3T3dJREFRQUJBb0lCQVFDZlZCQ3AyUHBTYU4rNQovT0tzcHIxeFdtTTNhczVHMUppWEs1U0tIRXNrekU2YmFZNEJ1WEFET21qNUlNQ0hnb2FqNlNtYlp1WEhoMTd5CksxUEw4Y3BrSnZ0YXMraEc1RnZ4eWxnRHlnZHVKeElENlZadHAzeGd1QkZGV0dkVzF1NG5nb05BbjJCaDJLbnMKM2Q2Ti9BZm9sVkZUZ2FrWWFRandzVCtXUWFDanFaRngxRExsY1FSazBzQUNEczZwZ0dhK2N3MVVkMndnamliNgp1YSs1K1pLNDNJaWYyS3puZWV2RC9xWVZRdmlkRGxuRDM5NHFQR3F3YUFKWlNwZTBMT2hJU2VjVkVhWW9NVUV0Ck5Wd2lWZFh5RGxNYTFURE45ZHV5bXlrVk03ZTJaSXZtNDdzdEY1Vzc3ajY0eVNINlh1TnNVTm5rNjNoUzliR00KMmFHVFFrTEpBb0dCQVBpV1N1SEt6SDdzNUZLbm5BUVd4VGVuRlE2RUpZV3ZIdzJ4ekU4SGo0S3Q0U0hGczVjSQo5dzZPaVhpUzVSRDN5NVdDSWQ0cDgxbEl6amluWjRGSWtNWFl5emdWM2JocnZxYWxNY3pVZTNHVFU4ZTBFWkZvCndMZ0JWd2VQbEw3TUIwUU9sSVNtcUFoVUdIYjBNTUg5ZVN5ZnRxVXFES1J6Tng5Nmo1T0g1Y21kQW9HQkFNb0UKN3ZubDQ2SHJ5SDRlMU02M3d3WFVBT0F3dGZiaHJEcXo0alkyY0VSUTJtdk9sTStDOWl0WjR6ZXh2QlJhUXI5OAo0NW16K2FmMWxWTUtwS2ZtNFdPc3dCb2QwTG1RZXpXQlNuSytMNlVpN1NvamZRNGNPTGE4T2dQODNSc1lmS05wCjZTWjJHU0NhVUJWTGt4NmI3Z1Faa2VlVnp4UDRvQm1LUS95WUpFeTNBb0dCQUxJZWhwTlpTOFFhbTlONTA3bSsKVXh2NGRZY01PeEthRTRjdGdmYVN0VXJ1cW1VWGt3SkM0enVqK0c3VDJweVk0V0JFZVY0Rjh4OWpvcGhIbzB1bwpva3VSZHJPK1B6dTR3RWdLRUMvemhHd3lJNUx4dkxEVFBWdmJZZS9CK3RQbnY4RU5MWEFMTmxXWlpGby95SHdICjBuNmVCakk4ZWdpUG9jekZkZ0ZCRys2bEFvR0FlSWJRL1E4RzdFZjc2aU1DM0FJT3ZKOXJsbFg1ZWozUnY0UXEKNWlVOGZjV3ZTcnFKVmZUUVliVFROeHMzRnYxeTdVUFpsbzRsMk90UUY2YzE3V1oxK2ozS3Jzb3pDVU1GL3pvUAo3TDFETjhiS3NHVlQ2dU16Z3ZKeHVvZFdjeC84M0pJSHBBYTVueFh4eVlLNVYzMjRWNEhaNXMwZUt0QWUxSjRGClNlS0xaYWtDZ1lFQWxUNXpsMlNjbm5qN0RvTlcxcjNrNGFxUVAvMjE4dkEwN3l0cU9YK3lYck5QeXFwcjdFVmQKNUJSalYyUXU4MWYrbFVScERzUzg5OWtCVjlUYThraEEyQWhaeTNkRFhHc3E5Ni83WnpGNW56YmlXSWo5Z3duQQo3bmpyZFdvZHdMdXYvNldoVGQzS1M4ZWtFMzhmY20ycVV0dkx1ekVIYjBnV0ZUV3VQaU10VTdNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpQZkpOYjR2Vk9ydHdjenprUkkxdFl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TlZvWERUSTRNREl3TlRFNQpNRFl4TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4Q3RoZmJpVXd2MGhJdHRTWTBOc2JiWWU0QjVZakpCZ0t2VmRjTVVzSzRnNVAvWUsKcnR1WXFKdzYwNUw5QVVlUnpKLzh5ajluUHVFQmNnY1BYMGIyNVVCNk5KNzVrdHU4ZkhwK3BGanBuMmtHRzV6Tgpnc001UWNwQUFETlBZQ3BZeUtiWGtDcEFMRXBCbEM2RGlWKzdFeE5BYXBkQ1Avd29zaWFvekZrVmpDMld2ZHlWClN3dXBBVGxQM09QZ3FnWTIxQ1A0VlNUbWRyOW12VG5NWGV6b2wwSnFmeFdhTnZ5aS8zVjAyMlpla1NvMDNGenQKY1dpN09RRnpxaEdEZzdnbW9kUkpVdFhpTEc3RklVS1Z6ZHpFTmZnRk9ZVjVVSENHdktNL1NqdU9ySXltSzYyVgp1Vm8vVVJaMWpiclI4VXlYNHZWUFFCek9xcldhUkloZjd6RzdPd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSGVtMWJ2QXJNMkRIcmRndU44anl6bW56ampJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0F6SG4vUkxqVjJaMmJmZnBqallIOVE1Q25VakRaY055WUQvMFpSMXQwa1NwNUdyS2NvNmlwCkhFVGpoaHNjdDRhQTVkZ0xxa081d1d5TWFiVzJLeFRhWTVPSkw1NzJyeU5vTmNTVklIcjQySFFzWEdoMi9oQTEKU3h6dTBUSHFHQzRGNWtCTGQ1U05VK0pndnlZZnBhdHBvOHBtR3FFWFc3aWxsQjh0V1EwUFZWc2xTVCtLK1ZKNgo5bU96eFF4TUtsN2lsVGtndmtkbE54c1ZCQ3plMDViOVFhcEZHT0l3K210czNxRldHNmVyVTJwNGxrRFRRczVFClp0VGlQYUEvVUlNdXNXelhvbWtPT0lrRXp3bGlvRXBxZGdEUkN2WFB2SmdNVGNDd09lMnFIaHJ5WHBDcFhYSVQKVm1KYzR1VDZoVVpnYW13Z2RzWjIvR29obDgzUG50Q2UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lRUEdtc0JzcDFxanJsVGVpV1VPTHBpekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3TWpBMU1Ua3dOakUxV2hjTk1qZ3dNakExTVRrdwpOakUxV2pBWU1SWXdGQVlEVlFRREV3MWhaRzFwYmkxbGRtVnlaWE4wTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBc1BiOThLakFFa1hqQXNIMG9rdmdKSHdoS0gwcUo0bytqaVl5WVhrMGJ0cFoKT21GSHI2RDR4UHdLaVd4V3RlNEphcmMwNjh6MUY2V3RyN1kwS0VPdFQrQnZiZU02QklBZXN6a2hKTk1uSjhzTAplTjU3OXZmZFcxYWdhVU0rU1lGMnBDUmdaZURadVJiY0ZNS2VmS0JXdmE3VHZuY2dXMFl2aWtQM2dxd0ZaTzhmClJWTkxMZlBjSCtoTWgwd2JzQStGbEkzSFJvZlFyTzQyeUZuMXU4UncxWHkwREo2d24zSVdUY2lqVU15OGg2RkQKRnQ4bWR6STV3YmplWVpVaWN5dmQ4dUR6d1VjWVN5VmU3amdwZUs0cEtvZFh5ZU1McS9DZmJ0Z0xBV0FaK21GZwpaR1BZcnJ2RFRQbTB4OTRZa29uUDU4VTZyMGZRQyt6d2ZYdzh6TjJLc1FJREFRQUJvMkF3WGpBT0JnTlZIUThCCkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIKL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVZDZiVnU4Q3N6WU1ldDJDNDN5UExPYWZPT01nd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBSngvUVBPVlRTRkpVZjBZdElLQkg1T2FLd3F3OG1YdktLTElPOFZlWFN3UVpCS2F6eHhjCkFGaS9SVjlkVUEzZG5Kc2NNOHRvWkgrZEtvU3pPWDJ6V3lLYXNTNG5HMldKclF5U3pYQXArR1JaM0dOVW92NEgKcnl1emN2d3pJeVNHQkhXN3NvZUFwd29hRCtZazA4ZkxVK2ZSeTJnZWtLK0FzVjhlcUpSM2hONHh6YVhLaXFSRApEbkcyeHVTSDVyTmh0WDRJZ25VcmJHQmd4NjRhbFJ6aFZKcDJnVDRZS3UyUENYWkVpN2hINUs3TW43RzByWTNqCjFKa3hRSkp0RzJlZU9oUXUvajFJUkU3T3BXNzZCemxxL2luVjhXZjkwQnI1U0UrU0M4akIrZE1kUVV6K1NzSjMKenk0cXZ6VHBrbWYyY3pKWmd0RzN6cm5mR0VsM3JQOWlxU1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc1BiOThLakFFa1hqQXNIMG9rdmdKSHdoS0gwcUo0bytqaVl5WVhrMGJ0cFpPbUZICnI2RDR4UHdLaVd4V3RlNEphcmMwNjh6MUY2V3RyN1kwS0VPdFQrQnZiZU02QklBZXN6a2hKTk1uSjhzTGVONTcKOXZmZFcxYWdhVU0rU1lGMnBDUmdaZURadVJiY0ZNS2VmS0JXdmE3VHZuY2dXMFl2aWtQM2dxd0ZaTzhmUlZOTApMZlBjSCtoTWgwd2JzQStGbEkzSFJvZlFyTzQyeUZuMXU4UncxWHkwREo2d24zSVdUY2lqVU15OGg2RkRGdDhtCmR6STV3YmplWVpVaWN5dmQ4dUR6d1VjWVN5VmU3amdwZUs0cEtvZFh5ZU1McS9DZmJ0Z0xBV0FaK21GZ1pHUFkKcnJ2RFRQbTB4OTRZa29uUDU4VTZyMGZRQyt6d2ZYdzh6TjJLc1FJREFRQUJBb0lCQVFDQlpjbGZuUFQ5SjQ4TAo2Q2pxTjVNSStwOEFUUzF5eGhwaHRMcG9IY2xpT1ZTL1pIeVhocHdBNWM4S2wyWjhGemRaaWVjdmVLbktoY0lQCjFxb2l1d0hTZzJqWE1DeXZOOE83QjA0ZDhDd1VZOXJhb2N5QlZOTE9RL1I5bzhhNjF1aWFzMkt0ZkJHWHpvaFUKd2M1RGtMWjhjb2F3SWNsT0ZHOFVxZ2dreTRZU083TUx4c3h4UXg0WERZaFVtbWZtQUR0V21yWXlVZ0szWmEzZwpETHJ2ZHhSb2FTQ3FNb3BLTUFiMnFTWkd2U3p1dWZEOGxJclFyY1cvak5SZ0Q5Vmt1d0dvN1hrd1psY3dsVnM4CmpzNHo3dXJIUWs2L0lCMFB4Wm4xc2E5Unh2eWF5VXRGRnVNSWp5dHk0WDJsc1kwS1VqUmVraktLV2NOM1JmbjgKd3c5RndMNDFBb0dCQU9jcEFxTjY4YUlBNk1aeHNvMVE1Q3RTTlkvVTI3anZIbnVxMU1xQjNiQng2ZFNkZS8zZwpGZjdQSWVTd2t0eXlNYWx5YmlPSFlZREpndmR6a3A5d2dTMG5VUVRySWxpcHZvV29Lcmh5R0M3VFM0N0FxbFdECnBWbzJOaEZra0NaVmRaQVZpUWJHM1RPNnFhNy9PYjhwWnZ3MlVjcDBEbnlWTmNMLzdJVSt1VElEQW9HQkFNUDcKSHJNZTBndGwzOGRnQnhsZHlQaGRsdFBOY3VlejcrVDNpNDJDY29ZSXlBeERkUXpDS0VXNHlLUUlpM0NPeXRjQgpLdEJYSDZENGxOZTh2N3VWK3FUa3JNT0hUL1BZUmUwWlJrc3UraDRabWRsek55UFU5QTBLdHJVd0tadEpZOFAzCk5nVWlaQ3JYRTZYK1BRek15V2dnRlZTM2FvR3h2UUtKTE1mWmg2dzdBb0dCQUluQ3ZnalJqMGwrQXp1b3JNRmQKVU8ya2E3bFJJTFVoQkdpdEVXMnlZWHp6Rm1pWWhqbHhuNG9neFZFMkRnQXF6ai91cTBiUE9zTjIxRzlHV0Q1ZQozUTBjM2tMeElxSDJYMDNtUDdkMmY0VUFkWW9ZdGlxS2J6UEpGUVhlaWEzZXhsWmREekdUdUdaSXV6RklkNUMrClN0cktRSXBJQ2c0akdrd2hHMEw1YzRNakFvR0FHbWUxUlRENzMrbEQ4MXJ1MmU0VzY4L0FTSjAveEJRc1dFODYKRUVEcEtVSDVvaDFjb2ZGdTk2WGo4cVhzRTZoSmtCcHFLRlAwd1AxOUlHd2Y4U2hOOHZXVWlXdXJ6QkR4cXZaaQowREp1Skt3U1hJZjNmKzVyUzI2TUczRjN5YUpqdkwyTUc3ajhnZ0VrZHBNQXFyN1V6Q0MyZndtUFloWU9mMDc0Cko1MFplSTBDZ1lBbXAydzdNSmN5UUJERFV2Y1pzVU5xU2FqQ3ZiQ1VwOUZXcUVvYXArejZ5c3J2SldMVUVIdk4KV0JteDJqTzFCcUExcjlrcjJGaHY4WUc2c1F1N3lwWGtRTmdtQzE2dFNnb0kwelJ2V2hZcGxNajFtRGJtY2J0RQpmVENHSHNPTUtJanJaaG5XU1ExaUdoK0owSzBJVXU4cVgxeWRlVTVqa1MySXhtaURUdkNOUmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpQZkpOYjR2Vk9ydHdjenprUkkxdFl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TlZvWERUSTRNREl3TlRFNQpNRFl4TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4Q3RoZmJpVXd2MGhJdHRTWTBOc2JiWWU0QjVZakpCZ0t2VmRjTVVzSzRnNVAvWUsKcnR1WXFKdzYwNUw5QVVlUnpKLzh5ajluUHVFQmNnY1BYMGIyNVVCNk5KNzVrdHU4ZkhwK3BGanBuMmtHRzV6Tgpnc001UWNwQUFETlBZQ3BZeUtiWGtDcEFMRXBCbEM2RGlWKzdFeE5BYXBkQ1Avd29zaWFvekZrVmpDMld2ZHlWClN3dXBBVGxQM09QZ3FnWTIxQ1A0VlNUbWRyOW12VG5NWGV6b2wwSnFmeFdhTnZ5aS8zVjAyMlpla1NvMDNGenQKY1dpN09RRnpxaEdEZzdnbW9kUkpVdFhpTEc3RklVS1Z6ZHpFTmZnRk9ZVjVVSENHdktNL1NqdU9ySXltSzYyVgp1Vm8vVVJaMWpiclI4VXlYNHZWUFFCek9xcldhUkloZjd6RzdPd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSGVtMWJ2QXJNMkRIcmRndU44anl6bW56ampJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0F6SG4vUkxqVjJaMmJmZnBqallIOVE1Q25VakRaY055WUQvMFpSMXQwa1NwNUdyS2NvNmlwCkhFVGpoaHNjdDRhQTVkZ0xxa081d1d5TWFiVzJLeFRhWTVPSkw1NzJyeU5vTmNTVklIcjQySFFzWEdoMi9oQTEKU3h6dTBUSHFHQzRGNWtCTGQ1U05VK0pndnlZZnBhdHBvOHBtR3FFWFc3aWxsQjh0V1EwUFZWc2xTVCtLK1ZKNgo5bU96eFF4TUtsN2lsVGtndmtkbE54c1ZCQ3plMDViOVFhcEZHT0l3K210czNxRldHNmVyVTJwNGxrRFRRczVFClp0VGlQYUEvVUlNdXNXelhvbWtPT0lrRXp3bGlvRXBxZGdEUkN2WFB2SmdNVGNDd09lMnFIaHJ5WHBDcFhYSVQKVm1KYzR1VDZoVVpnYW13Z2RzWjIvR29obDgzUG50Q2UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUpDdzFIU2JGZkFsZ3FjVE9iUEova3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TlZvWERUSTRNREl3TlRFNQpNRFl4TlZvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQTFNbTQ1QWlRZElvZVpvWGFjV1JWZ1pEMXNZcklSb2lsbEhjTXBCenNjN3d1clBaY1RhM00KV2U1Z1o1UElLd2FGZWpyWlZaZnkvWkJNOVhiOHVnRlVOQlJ2eDYvZlIwK2dtb0gxSE1zcTc1MnFpMmVsVTZ2awpYODFJZlJGbm8ra2lCL0ZMMGxYdS9tTXpyUTNpZEVTTHMrVkw1RWRwTHZTUTlpbkFlRnZqYmVuM2U2V0pVRlF5Cmk0UGF0bjhLQnJKSzRFV3dRMUtIem85aDJSYXVlUW5MZDJ0aCtpU2pXM0NjQzhtMHZ3UWtCczRpTUNOZi93NmQKcWlzQkFjZlgyUSs1cTFWZEdhc2NSWXVOUDZMSGpiVk9VN1RQZHhMVm5LZjBsblZ6MHZjdXNrdkp3c1ZNQVZQQgo5T0dXRWtOUVRKNHNmSUxZNmRkOTZaZ0ozRGhHWURPTmp3SURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVWQ2YlZ1OENzellNZXQyQzQzeVBMT2FmT09NZ3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUVON3ZMbDBTVUU0bmNYaUtGWmVRcnBOZjBGQ00ra1U3Ym5TcU1jM3RnNklBY0loMW14VzFNM0hzdi9zCmZkbUFDbWhYbmozTytISC93RGNuQ1VqWlREUEVrSWlVYVA2QWpGODBLdXBUd2p1bGYrdUVmazBNdlhlazYyOVEKdG1QbkUwQnR3M0szUjY0QWI4T21xdUNSVm1kUC9tRXk3ZWRmK0p6OFpMR0pDd1E4cHdPK3ErMWd2cG5SOHJ5bwp4WGY2SnlJTUdpaTFjTHA5eE41RGd2SkpEM3NvQUMrZTJTY2pFWE4vd1FGb0pTdURBaUVSdy9UWjJUbTdMRkZ0CnZBNzhNeWdKL0FXUkczd0tNcjFHMUNZL3BpeWFEakd0Lzc2L0VlMWJGcW9zN25ZWjIvWGJZU3NTSFM3RXJEK2QKZm4xa0pvZDc2U25DVWlVTy8rcWVOSzB3TUpFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMU1tNDVBaVFkSW9lWm9YYWNXUlZnWkQxc1lySVJvaWxsSGNNcEJ6c2M3d3VyUFpjClRhM01XZTVnWjVQSUt3YUZlanJaVlpmeS9aQk05WGI4dWdGVU5CUnZ4Ni9mUjArZ21vSDFITXNxNzUycWkyZWwKVTZ2a1g4MUlmUkZubytraUIvRkwwbFh1L21NenJRM2lkRVNMcytWTDVFZHBMdlNROWluQWVGdmpiZW4zZTZXSgpVRlF5aTRQYXRuOEtCckpLNEVXd1ExS0h6bzloMlJhdWVRbkxkMnRoK2lTalczQ2NDOG0wdndRa0JzNGlNQ05mCi93NmRxaXNCQWNmWDJRKzVxMVZkR2FzY1JZdU5QNkxIamJWT1U3VFBkeExWbktmMGxuVnowdmN1c2t2SndzVk0KQVZQQjlPR1dFa05RVEo0c2ZJTFk2ZGQ5NlpnSjNEaEdZRE9OandJREFRQUJBb0lCQUNiWVhJUmtlOXFLakZveQovVm5OOHo0ZjlIcGcxNGJvMHpGek9qK0xlQzc0bjV5N3JNWVJnRWk2bDZiUTk2M0RGd0xsVTErb3laYzRqSlFUCkVMZjBIaWNUeEFRME94S05tc2dhQ1dFa1JjWlFoaDNFNGcyUVI3U2xpU0lyMXp1NUI1bGpsMi9pZUNyQWVXS1MKTWxEL1luR0kzbjNoKzNXeTkvTzRVNGFsWDdOa3VhbXBGN2pNaWdzRjg0ZG9ESlY2ZDNnRUhIM0xwejlTNFNROQplQ3Zldy9IUGZYNHdnbEtLaXJleW4wbkdFbFZCZTJzWlJqbTVlL1d4a2wzVk8rQnk5alZ6T2pWWGhrWHdRQ2lCCmhxUytmNXhNRGgrZnI0YU5TMHBnWEd3bjJoa2ZxZVEvM0x6ckJPODM0TExnNjU0eGtTM1BoYlVBTVdFWmlXRGkKQlk5cU5PRUNnWUVBN2hrSVRZL1VNZm1oc1plcnd4SDVEQXpTTjdjdXpDNnZpNEhHU1NxVnptNmFOTHBpNzJSSwpxWVhjQ0NiUXpLYlVzcDVmaWpWNHYxeXc0SnFJY2VrL1FjUkNQOFQ0ZWRqL1owVVl4RUx3cEFnLzRweHJkbk0rCkNBbjNTWi9Yb3BWZnVDb0ZwSUhjeDVKeTU2NzNUUWlDZHEyMTBSTVFFZ0l1OGZ4RzNtVUJibVVDZ1lFQTVNbUYKSnl0N1o3Y2RnV3ViMEtOREhGMmFPM3NhbzFhOEl1Q2hXdXZnUTR4aGxRaXQ2N1IwZmZ5eTVUOG9ZaXh6L0lZYwpJc0VlUTFFS0FKT1hoUGhRQnI1amZiRnd2UUxnRVQvcXFZdUpGai9vd3kyNUcybUEwcDgrbU50TlNqQU9mejFOCkJ5dkRTT2lJMzZENUJjUmg2Rkc5SHdYUUdjdWQ3MWJCUUpROFl1TUNnWUIrWXNOSmlLTjJzNi9rK1VHdmxvYkEKb3IyajNaVDF4WUpoWjAyOTRPRU1aeUZzQTlRb2h2QXE5R2RMM0c3UmMyMU1NMDA3ckE2Z1phOXVTaGxMZmlpWgozSGZlS2N4THdhZ3hSVGhVVmNRdkRrSDdKRlRXMTIyQ0R1ZzVLS1BxSmFoZHRkQ3c5azRma2RsMHFpZVR1SVNvClFxVlVpZTNwNFViU0pMdnBxV3dORVFLQmdRQ2xHUnRpV2NseTNieUlFVnhlb2dJaTdSVUlpVngrdEcrTmg2WkkKMDJDQnZrTUk1anVEbFRSZldrVEtrOW9UaGxxb3h5cDBsZ0c5dURSTW1EVkdPbDZkanpTQ2x0SnhReXJvcDhReQpWMFEwN3llTCtXblQ4ejJJUUd4T3FDck5ONEt1cFZENXRNWDJ6ZjgveVkwS2NWM3A1VnBoa2JOTGVobGRockJzClpzeHcyd0tCZ1FEUExRWDBmWno1QVhpeTBiRkNTZHZnWXBmOHNFdFJ2TGRrNzFZZGVzelY2Z2ZCUG5UcjFMdmsKSkRhaCthTzNUbDRxcDd5TWZvb2FEOTY4Uy9uZnhlb0hEVUZJa0NXVzRTV05rTlZvYmI0MEVzcC9jTWNWb0c0NQpHckJyS25Sb3dCN25RWFNPRHJqTnNQWXBBWHVLV0lsdWVPR0xzR3dUR1IzWnd3N054eGpYcFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpQZkpOYjR2Vk9ydHdjenprUkkxdFl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TlZvWERUSTRNREl3TlRFNQpNRFl4TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4Q3RoZmJpVXd2MGhJdHRTWTBOc2JiWWU0QjVZakpCZ0t2VmRjTVVzSzRnNVAvWUsKcnR1WXFKdzYwNUw5QVVlUnpKLzh5ajluUHVFQmNnY1BYMGIyNVVCNk5KNzVrdHU4ZkhwK3BGanBuMmtHRzV6Tgpnc001UWNwQUFETlBZQ3BZeUtiWGtDcEFMRXBCbEM2RGlWKzdFeE5BYXBkQ1Avd29zaWFvekZrVmpDMld2ZHlWClN3dXBBVGxQM09QZ3FnWTIxQ1A0VlNUbWRyOW12VG5NWGV6b2wwSnFmeFdhTnZ5aS8zVjAyMlpla1NvMDNGenQKY1dpN09RRnpxaEdEZzdnbW9kUkpVdFhpTEc3RklVS1Z6ZHpFTmZnRk9ZVjVVSENHdktNL1NqdU9ySXltSzYyVgp1Vm8vVVJaMWpiclI4VXlYNHZWUFFCek9xcldhUkloZjd6RzdPd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSGVtMWJ2QXJNMkRIcmRndU44anl6bW56ampJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0F6SG4vUkxqVjJaMmJmZnBqallIOVE1Q25VakRaY055WUQvMFpSMXQwa1NwNUdyS2NvNmlwCkhFVGpoaHNjdDRhQTVkZ0xxa081d1d5TWFiVzJLeFRhWTVPSkw1NzJyeU5vTmNTVklIcjQySFFzWEdoMi9oQTEKU3h6dTBUSHFHQzRGNWtCTGQ1U05VK0pndnlZZnBhdHBvOHBtR3FFWFc3aWxsQjh0V1EwUFZWc2xTVCtLK1ZKNgo5bU96eFF4TUtsN2lsVGtndmtkbE54c1ZCQ3plMDViOVFhcEZHT0l3K210czNxRldHNmVyVTJwNGxrRFRRczVFClp0VGlQYUEvVUlNdXNXelhvbWtPT0lrRXp3bGlvRXBxZGdEUkN2WFB2SmdNVGNDd09lMnFIaHJ5WHBDcFhYSVQKVm1KYzR1VDZoVVpnYW13Z2RzWjIvR29obDgzUG50Q2UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQUlVdlhRUktCZUlyWGN5YTh0clhkbFV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TlZvWERUSTRNREl3TlRFNQpNRFl4TlZvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9OckRCeU1xWFk4UHM0YUJ6eTYKc3IyZ2puWmJpQXBrdXVPTk9CWmZTbnM0bDlWOW1MMm1aNmh4ZHlybTNIM2pkeG94L2daTUF6emhIMGJlS3h2TQo3YUpPeEwxVTgxVGtROFAwcHJrQ1FNN092MEFyTEdQZmZmK2doNXppZzN2TkNqZzZibUJPRm1Dekl1eHk5citJCmlLdGd1NDI0QTdCakpOQmE3dzVyT0psTnRqY3VWWHJMNGN6RS96QUxHZ3lZRmZPb3NTeGt6ZkIvQTVWZS9RYlcKc2pSbUxLeTcya211Y010T2NuVjl0eFdlWGtjb2NCUTNlU1dnNGo0T3VvOW02dmJibW9zbWNRUEVTVDlwajhmTApqU1BaRnMzSjdjWFRMME1vWFlMcDRnQTF3QTgvb0ZacXJuWVUxVk1TSCsvcWtxYzZLUDYvSWJXdUt5K21HaDVqClhBMENBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWQ2YlZ1OENzellNZQp0MkM0M3lQTE9hZk9PTWd3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBZkJ4L0lYd3RlM05udjZ2Nlpwc2xiRUFkb21laENiRmkzQ3h4bFF3cTFURWFtVWplClBKVGZBT0Fpalp5U1JtUnZIaU9Ea2gxYU51UkthaHc4aVJlaWhNbysvQ1NzYmtKZmR3SmNnTHB2R3RTNE12aUEKUDlLcU9hWEVubzk1cnAram9WOFA3NGNlMHFITk9tcloxTmwyK2Zub2E3d3RCeXZnMEZMN1FKWHJYYzdBZUt5TQoraFNmNVNaOFNoK0R0d3F1eDF0Y0xCaDJ2ZVBOK3JqRDV5ZWhJNlMrcmJpRHdISzRod2ZGTGRDbHF6T2Nac0xICm80Q0ErYkF6aTZERWNLVngyMW9XQW40YlJNSURlRjhaRitiTlBqWGZDaFpMRUduVXU0TGVva01ON2w2eVk4VGIKc2piT0toQmxNc293WHc2WWZxeTZMN3pkV0VLZ1BIaVcvYjZmUXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBNDJzTUhJeXBkancremhvSFBMcXl2YUNPZGx1SUNtUzY0NDA0Rmw5S2V6aVgxWDJZCnZhWm5xSEYzS3ViY2ZlTjNHakgrQmt3RFBPRWZSdDRyRzh6dG9rN0V2VlR6Vk9SRHcvU211UUpBenM2L1FDc3MKWTk5OS82Q0huT0tEZTgwS09EcHVZRTRXWUxNaTdITDJ2NGlJcTJDN2piZ0RzR01rMEZydkRtczRtVTIyTnk1Vgplc3Zoek1UL01Bc2FESmdWODZpeExHVE44SDhEbFY3OUJ0YXlOR1lzckx2YVNhNXd5MDV5ZFgyM0ZaNWVSeWh3CkZEZDVKYURpUGc2NmoyYnE5dHVhaXlaeEE4UkpQMm1QeDh1Tkk5a1d6Y250eGRNdlF5aGRndW5pQURYQUR6K2cKVm1xdWRoVFZVeElmNytxU3B6b28vcjhodGE0ckw2WWFIbU5jRFFJREFRQUJBb0lCQVFERzVxNCtIZ3hzMjc0MgpkbTlUL3hvclhjeWIyZXcrNHVETitvcE9qdU5PcUMycnpHQ1Zwbi9NeEFoczNtT0VPempGRVdwU1NaTWZZT29CCkNuajdwSjFHTXN4QnA1WDI3bm9TWGR5ZnZVZS9XUFhPZ3JRZFdiQVNybTFObXBOUzZQOENOS0NxM0VFWUxEVGsKUnB4bTRseGVQNGxxSnNJYk9HdFBTK2ovWEdteE1hN3RtMVh4dWJPSFdnVVFqdVVrRk5wOFQxTE5XaEdySWlaSQpEWjR2QjlqZy8yMkxkeUdoVWhHVWptQ0MyUU1VYW80bmZmYVE4R1Q5bHc0VjhWbWFaRmZtOE5CL0FpZURkS0RyCitTdnBPd0x0ZzVlNmNwcjYzUzJadjFlZmpwM21iZWVwUEc1c056aUVIQUVMU2RGNkE1STdWV2NRV3d0Wi9kd04Kank2ZXNNNEZBb0dCQU9RbzRBSHVVSllWMHNDcGdMZUM1amlFY2VDZlVFNWdQa081eGczaWVRVWEvLzg3R3JmeApoTi94bkFBMi9DcGFpU2IrR21zTFNKQVdGUXdCWS9iWXg3eWp1bDRRbGlmRFIrRlQ5OHNMUEdSUzN3YXRDeHVBCllJOFNjOXBtNGVWQndIUmd1UmtsTlRrTUJ6Yjljb0VlYy81c2VlVmd3RkhjaDd4dG9QbkEzaTJ2QW9HQkFQOHIKQWw4RFo5U3VMQkVURjlUME5KMnFNaS9vRi9JMTlieTUzNUl1OXRMZHlwcFJWTUcyQVBSdVlmSlRaclpqMEhiMQowazl5ZmlwRnN2aXdnOFJ6a2d0aE1OZ0IxcVB2bjhwTGN6dmpyd3NORGVNMDFCd29saFRDWHg3ZXJFc2hjSkRECnlmQS9uM21Oa1B6U0h0QzJGSnh4ZmFZRGlnVnZGdXo1NmZQOEpCMERBb0dCQU1oUnF2dUhCWElBangxZ3RRWnEKQXorejZWZlNDR3dIekNNaVJHV0VaY1M1dy9HUEx4STVGdlNYNk9PM1l3YThucGFCbXloSXE5ajF5bHpVQzdSNgorRU1EYldtUkhvU2l5OFZtTjdVcGxFaHhDaWVPWHFZeXZKUmhHeDZ5SGJ0dlUwM2FiaWxKcGNVRWJvRTFYUWRJCmVZYjBMc0haaElGYklrR3A3eC9ZMmprNUFvR0JBSVlLbHQxSWtiT2tweHQxRnpEVDlBdmF5ekJsVUtiNDk1VGoKWTNHTVlEYVhNZ1hzc1lSczBvV1VzcmswWEtGMVA1NHVOZ05zRnFDb0tvTC9Yc2pGR1RRSEl6eGxndFp0VzFoTwpXRU5lc0tZeWZsZ2JlVTB0ZU9HQTFhMEd0aVZsZEpkbmNsNVZYYlhoeXdjMGJlR2Z0S1lWN0RaWVo1bkJLSjdtCkRhTVFrZnYzQW9HQkFJUytvb3JOajhjRzdGUmNZMjJ6T042djRxNk5wQmdwcEVLekZDTnU4Y2UyWk5zR3NwK2cKMDBKdnB1MHA5MHRvSmFVY08zcU5VbytIbTF5WnRtdGpYUVdkWnppTTJiYVFDWXNHbTBUc0o3VHdHUVArZnM2ZgpEcUxpdy92a0VpM1hrS3lWWXY2QkVFSm80Nm5rTitzaU80WVRuTXBOWGRuY0ZvQ29GUCtVM1Y4YwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-config/clustermesh-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-clustermesh
  namespace: kube-system

data:
  tipani: ZW5kcG9pbnRzOgotIGh0dHBzOi8vdGlwYW5pLm1lc2guemVyb2xhYi5saW5rOjIzNzkKdHJ1c3RlZC1jYS1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LWNhLmNydAprZXktZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5rZXkKY2VydC1maWxlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvY29tbW9uLWV0Y2QtY2xpZW50LmNydA==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd", "kvstore" or
  # "doublewrite-readkvstore" / "doublewrite-readcrd".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  # - "doublewrite" modes store identities in both the kvstore and CRDs. This is useful
  #   for seamless migrations from the kvstore mode to the crd mode. Consult the
  #   documentation for more information on how to perform the migration.
  identity-allocation-mode: crd

  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  enable-envoy-config: "true"
  envoy-config-retry-interval: "15s"
  enable-gateway-api: "true"
  enable-gateway-api-secrets-sync: "true"
  enable-gateway-api-proxy-protocol: "false"
  enable-gateway-api-app-protocol: "false"
  enable-gateway-api-alpn: "false"
  gateway-api-xff-num-trusted-hops: "0"
  gateway-api-service-externaltrafficpolicy: "Cluster"
  gateway-api-secrets-namespace: "cilium-secrets"
  gateway-api-hostnetwork-enabled: "false"
  gateway-api-hostnetwork-nodelabelselector: ""
  enable-policy-secrets-sync: "true"
  policy-secrets-only-from-secrets-namespace: "true"
  policy-secrets-namespace: "cilium-secrets"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "true"
  bpf-lb-source-range-all-types: "false"
  bpf-lb-algorithm-annotation: "false"
  bpf-lb-mode-annotation: "false"

  bpf-events-drop-enabled: "true"
  bpf-events-policy-verdict-enabled: "true"
  bpf-events-trace-enabled: "true"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: everest
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "2"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve

  routing-mode: "native"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-tcx: "true"
  datapath-mode: "veth"
  enable-masquerade-to-route-source: "false"
  enable-wireguard: "true"
  wireguard-persistent-keepalive: "0s"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"
  iptables-random-fully: "false"

  auto-direct-node-routes: "false"
  direct-routing-skip-unreachable: "false"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.0.0.0/8
  enable-runtime-device-detection: "true"

  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  nodeport-addresses: ""
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-mode: "dsr"
  bpf-lb-acceleration: "disabled"
  enable-experimental-lb: "false"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "false"
  arping-refresh-period: "30s"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  enable-k8s-networkpolicy: "true"
  enable-endpoint-lockdown-on-policy-overflow: "false"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-route-mtu-for-cni-chaining: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  health-check-icmp-failure-threshold: "3"
  enable-well-known-identities: "false"
  enable-node-selector-labels: "false"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "true"
  ipam: "kubernetes"
  ipam-multi-pool-pre-allocation: 
  ipam-cilium-node-update-rate: "15s"

  default-lb-service-ipam: "lbipam"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  bgp-secrets-namespace: "kube-system"
  enable-bgp-control-plane-status-report: "true"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  dnsproxy-socket-linger-timeout: "10"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "1000"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-initial-fetch-timeout: "30"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"
  proxy-max-concurrent-retries: "128"
  http-retry-count: "3"

  external-envoy-proxy: "true"
  envoy-base-id: "0"
  envoy-access-log-buffer-size: "4096"
  envoy-keep-cap-netbindservice: "false"
  max-connected-clusters: "255"
  clustermesh-enable-endpoint-sync: "false"
  clustermesh-enable-mcs-api: "false"

  nat-map-stats-entries: "32"
  nat-map-stats-interval: "30s"
  enable-internal-traffic-policy: "true"
  enable-lb-ipam: "true"
  enable-non-default-deny-policies: "true"
  enable-source-ip-verification: "true"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/cilium-envoy/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-envoy-config
  namespace: kube-system
data:
  # Keep the key name as bootstrap-config.json to avoid breaking changes
  bootstrap-config.json: |
    {"admin":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/admin.sock"}}},"applicationLogConfig":{"logFormat":{"textFormat":"[%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v"}},"bootstrapExtensions":[{"name":"envoy.bootstrap.internal_listener","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener"}}],"dynamicResources":{"cdsConfig":{"apiConfigSource":{"apiType":"GRPC","grpcServices":[{"envoyGrpc":{"clusterName":"xds-grpc-cilium"}}],"setNodeOnFirstMessageOnly":true,"transportApiVersion":"V3"},"initialFetchTimeout":"30s","resourceApiVersion":"V3"},"ldsConfig":{"apiConfigSource":{"apiType":"GRPC","grpcServices":[{"envoyGrpc":{"clusterName":"xds-grpc-cilium"}}],"setNodeOnFirstMessageOnly":true,"transportApiVersion":"V3"},"initialFetchTimeout":"30s","resourceApiVersion":"V3"}},"node":{"cluster":"ingress-cluster","id":"host~127.0.0.1~no-id~localdomain"},"overloadManager":{"resourceMonitors":[{"name":"envoy.resource_monitors.global_downstream_max_connections","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig","max_active_downstream_connections":"50000"}}]},"staticResources":{"clusters":[{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"ingress-cluster","type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"egress-cluster-tls","transportSocket":{"name":"cilium.tls_wrapper","typedConfig":{"@type":"type.googleapis.com/cilium.UpstreamTlsWrapperContext"}},"type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"upstreamHttpProtocolOptions":{},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"egress-cluster","type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"ingress-cluster-tls","transportSocket":{"name":"cilium.tls_wrapper","typedConfig":{"@type":"type.googleapis.com/cilium.UpstreamTlsWrapperContext"}},"type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"upstreamHttpProtocolOptions":{},"useDownstreamProtocolConfig":{}}}},{"connectTimeout":"2s","loadAssignment":{"clusterName":"xds-grpc-cilium","endpoints":[{"lbEndpoints":[{"endpoint":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/xds.sock"}}}}]}]},"name":"xds-grpc-cilium","type":"STATIC","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","explicitHttpConfig":{"http2ProtocolOptions":{}}}}},{"connectTimeout":"2s","loadAssignment":{"clusterName":"/envoy-admin","endpoints":[{"lbEndpoints":[{"endpoint":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/admin.sock"}}}}]}]},"name":"/envoy-admin","type":"STATIC"}],"listeners":[{"address":{"socketAddress":{"address":"0.0.0.0","portValue":9964}},"filterChains":[{"filters":[{"name":"envoy.filters.network.http_connection_manager","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager","httpFilters":[{"name":"envoy.filters.http.router","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"}}],"internalAddressConfig":{"cidrRanges":[{"addressPrefix":"10.0.0.0","prefixLen":8},{"addressPrefix":"172.16.0.0","prefixLen":12},{"addressPrefix":"192.168.0.0","prefixLen":16},{"addressPrefix":"127.0.0.1","prefixLen":32}]},"routeConfig":{"virtualHosts":[{"domains":["*"],"name":"prometheus_metrics_route","routes":[{"match":{"prefix":"/metrics"},"name":"prometheus_metrics_route","route":{"cluster":"/envoy-admin","prefixRewrite":"/stats/prometheus"}}]}]},"statPrefix":"envoy-prometheus-metrics-listener","streamIdleTimeout":"0s"}}]}],"name":"envoy-prometheus-metrics-listener"},{"address":{"socketAddress":{"address":"127.0.0.1","portValue":9878}},"filterChains":[{"filters":[{"name":"envoy.filters.network.http_connection_manager","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager","httpFilters":[{"name":"envoy.filters.http.router","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"}}],"internalAddressConfig":{"cidrRanges":[{"addressPrefix":"10.0.0.0","prefixLen":8},{"addressPrefix":"172.16.0.0","prefixLen":12},{"addressPrefix":"192.168.0.0","prefixLen":16},{"addressPrefix":"127.0.0.1","prefixLen":32}]},"routeConfig":{"virtual_hosts":[{"domains":["*"],"name":"health","routes":[{"match":{"prefix":"/healthz"},"name":"health","route":{"cluster":"/envoy-admin","prefixRewrite":"/ready"}}]}]},"statPrefix":"envoy-health-listener","streamIdleTimeout":"0s"}}]}],"name":"envoy-health-listener"}]}}
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: everest
    peer-service: "hubble-peer.kube-system.svc.cluster.local.:80"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    disable-client-tls: true
    
    disable-server-tls: true
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  - cilium-config
  verbs:
   # allow patching of the configmap to set annotations
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgpclusterconfigs/status
  - ciliumbgppeerconfigs/status
  verbs:
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgppeeringpolicies
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  - ciliumbgppeerconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  - tlsroutes
  - httproutes
  - grpcroutes
  - referencegrants
  - referencepolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  - gateways/status
  - httproutes/status
  - grpcroutes/status
  - tlsroutes/status
  verbs:
  - update
  - patch
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-tlsinterception-secrets
  namespace: "cilium-secrets"  
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
# Source: cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-tlsinterception-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-gateway-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-bgp-control-plane-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-tlsinterception-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-gateway-secrets
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-tlsinterception-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-envoy/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-envoy
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9964"
  labels:
    k8s-app: cilium-envoy
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    io.cilium/app: proxy
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium-envoy
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics

spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: LoadBalancer
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
  loadBalancerIP: 10.171.0.10
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  annotations:
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium

spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: grpc
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer

spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 80
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.2.2"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        resources:
          limits:
            cpu: 2
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: envoy-sockets
          mountPath: /var/run/cilium/envoy/sockets
          readOnly: false
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cilium-netns
          mountPath: /var/run/cilium/netns
          mountPropagation: HostToContainer
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.2.2"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.2.2"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          privileged: true
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      hostAliases:
      - ip: 10.111.0.10
        hostnames: [ "tipani.mesh.zerolab.link" ]
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To exec into pod network namespaces
      - name: cilium-netns
        hostPath:
          path: /var/run/netns
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host or apply sysctlfix
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      # Sharing socket with Cilium Envoy on the same node by using a host path
      - name: envoy-sockets
        hostPath:
          path: "/var/run/cilium/envoy/sockets"
          type: DirectoryOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
          # note: we configure the volume for the kvstoremesh-specific certificate
          # regardless of whether KVStoreMesh is enabled or not, so that it can be
          # automatically mounted in case KVStoreMesh gets subsequently enabled,
          # without requiring an agent restart.
          - secret:
              name: clustermesh-apiserver-local-cert
              optional: true
              items:
              - key: tls.key
                path: local-etcd-client.key
              - key: tls.crt
                path: local-etcd-client.crt
              - key: ca.crt
                path: local-etcd-client-ca.crt
---
# Source: cilium/templates/cilium-envoy/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium-envoy
  namespace: kube-system
  labels:
    k8s-app: cilium-envoy
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-envoy
    name: cilium-envoy
spec:
  selector:
    matchLabels:
      k8s-app: cilium-envoy
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-envoy: "unconfined"
      labels:
        k8s-app: cilium-envoy
        name: cilium-envoy
        app.kubernetes.io/name: cilium-envoy
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-envoy
        image: "quay.io/cilium/cilium-envoy:v1.31.5-1737535524-fe8efeb16a7d233bffd05af9ea53599340d3f18e@sha256:57a3aa6355a3223da360395e3a109802867ff635cb852aa0afe03ec7bf04e545"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/cilium-envoy-starter
        args:
        - '--'
        - '-c /var/run/cilium/envoy/bootstrap-config.json'
        - '--base-id 0'
        - '--log-level info'
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9878
            scheme: HTTP
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.2.2"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        ports:
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: envoy-sockets
          mountPath: /var/run/cilium/envoy/sockets
          readOnly: false
        - name: envoy-artifacts
          mountPath: /var/run/cilium/envoy/artifacts
          readOnly: true
        - name: envoy-config
          mountPath: /var/run/cilium/envoy/
          readOnly: true
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccountName: "cilium-envoy"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cilium.io/no-schedule
                operator: NotIn
                values:
                - "true"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium-envoy
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
      - name: envoy-sockets
        hostPath:
          path: "/var/run/cilium/envoy/sockets"
          type: DirectoryOrCreate
      - name: envoy-artifacts
        hostPath:
          path: "/var/run/cilium/envoy/artifacts"
          type: DirectoryOrCreate
      - name: envoy-config
        configMap:
          name: "cilium-envoy-config"
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          items:
            - key: bootstrap-config.json
              path: bootstrap-config.json
        # To keep state between restarts / upgrades
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "ed2e7f035edb07123722b7b1e9d351ea815aa28dbce6c79f26d2b2d5566361da"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.17.0@sha256:1ce5a5a287166fc70b6a5ced3990aaa442496242d1d4930b5a3125e44cccdca8"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.2.2"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      initContainers:
      - name: etcd-init
        image: "quay.io/cilium/clustermesh-apiserver:v1.17.0@sha256:05ccf79102724a943b967337a7cd45177118b76b72fb937d0c8ecb3ce136605c"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - etcdinit
        # These need to match the equivalent arguments to etcd in the main container.
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        env:
          # The Cilium cluster name (specified via the `CILIUM_CLUSTER_NAME` environment variable) and the etcd cluster
          # name (specified via the `--etcd-cluster-name` argument) are very different concepts. The Cilium cluster name
          # is the name of the overall Cilium cluster, and is used to set the admin account username. The etcd cluster
          # name is a concept that's only relevant for etcd itself. The etcd cluster name must be the same for both this
          # command and the actual invocation of etcd in the main containers of this Pod, but it's otherwise not
          # relevant to Cilium.
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        # The clustermesh-apiserver container image includes an etcd binary.
        image: "quay.io/cilium/clustermesh-apiserver:v1.17.0@sha256:05ccf79102724a943b967337a7cd45177118b76b72fb937d0c8ecb3ce136605c"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        - name: etcd-metrics
          containerPort: 9963
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.17.0@sha256:05ccf79102724a943b967337a7cd45177118b76b72fb937d0c8ecb3ce136605c"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=20
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --max-connected-clusters=255
        - --health-port=9880
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        readinessProbe:
          httpGet:
            path: /readyz
            port: apiserv-health
        ports:
        - name: apiserv-health
          containerPort: 9880
          protocol: TCP
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir:
          medium: ""
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccountName: "clustermesh-apiserver"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  k8s-app: clustermesh-apiserver
              topologyKey: kubernetes.io/hostname
            weight: 100
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium

spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.17.0@sha256:022c084588caad91108ac73e04340709926ea7fe12af95f57fcb794b68472e05"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          # livenessProbe will kill the pod, we should be very conservative
          # here on failures since killing the pod should be a last resort, and
          # we should provide enough time for relay to retry before killing it.
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 10
            # Give relay time to establish connections and make a few retries
            # before starting livenessProbes.
            initialDelaySeconds: 10
            # 10 second * 12 failures = 2 minutes of failure.
            # If relay cannot become healthy after 2 minutes, then killing it
            # might resolve whatever issue is occurring.
            #
            # 10 seconds is a reasonable retry period so we can see if it's
            # failing regularly or only sporadically.
            periodSeconds: 10
            failureThreshold: 12
          startupProbe:
            grpc:
              port: 4222
            # Give relay time to get it's certs and establish connections and
            # make a few retries before starting startupProbes.
            initialDelaySeconds: 10
            # 20 * 3 seconds = 1 minute of failure before we consider startup as failed.
            failureThreshold: 20
            # Retry more frequently at startup so that it can be considered started more quickly.
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
        
      restartPolicy: Always
      priorityClassName: 
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
