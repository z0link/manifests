---
# Source: cilium/templates/cilium-secrets-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-envoy/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-envoy"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
automountServiceAccountToken: false
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuSHpJSnhmdktTTXdiUmpZblFyMUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TkZvWERUSTRNREl3TlRFNQpNRFl4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4dGxtTXZWUzBYVGRDSnNPMGp6RmIvcG1HbzNlRFFiNFVpRFJxbXhkbGRTd2V2NmUKTjFMS2pNKzZPWENvR05iK1hpbHAxT0ZDSHgydS91RGVkcFlVU3E0U1pIMi9ZaXlYYk1zNENpOWV3bXBwMDhZcgp4YzlGbER5UDBPOGkrZEMveXBxNCs2SERJaFI5bDBDL2tibFE5STQvZi9qVW1OZ1ZRRXFna2p0REZnU3gzY01sCjJJejBsZ1lpSVlsV0xuTllMZnVyZ2grcVdxQW9ob0FjQkw2S2dsN1NpMEhtNjdCZml1R2VQWldrUFN6c2dJYlEKcWFNZkdidzVxL1lNSGpwRFhFSFB5RnozSkoxTXJENHJPTzMreCtvbUVJdGc5ZldpVUhoalBHQ3JVSHowbXA3UwpUVm9QUTRsOUZOKy93UHM0Z2IxazNuSVNqY3JLVW53Ti9CKzZId0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSi9MdDhTZFlncUJqRUk4V2JRUEYxWG95ZGk0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZmamdUMHllQUZEcEMrTHBGcVN3Tm9MTWpjQVhSMFNxZDVhVjc5SnBNaWRTY0NDM3NwNXNZCndsc3BCdXhZZU5xOFdTU1lpY25uNWtCcGJhZS9WVVVMMnFuSSthdStZMTBWQlI2dXdTVjFFUDlVa1BoS0hrU1MKakE5M2dIMks0Y2VSeEJ2VnV1YTRoTlV0REU4Zm5mYnRmRFoyY3BCZTJtN1hVbW9jWHhCVlJoYnluQzhoblNjYwpBOGhEMzljNU1kTnJxU0RVVGlIZjI5RXNUU1d5eFdpbGpTMXRwS1BxekMwOGdkWVJkYm1iZ1pBWlFYUElVRnZKCnBJU0Y2WG9Iai85cGoyelp0emJjaEloTExvV0Q0VFVQR0hRTHEvREZycjUxdlpxSjlSd2xJdzZidGpEd2pUcDkKaitzdlNLbDJPb2J3SHV3QmpOcW5sT2M1d09tU2NGKzIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeHRsbU12VlMwWFRkQ0pzTzBqekZiL3BtR28zZURRYjRVaURScW14ZGxkU3dldjZlCk4xTEtqTSs2T1hDb0dOYitYaWxwMU9GQ0h4MnUvdURlZHBZVVNxNFNaSDIvWWl5WGJNczRDaTlld21wcDA4WXIKeGM5RmxEeVAwTzhpK2RDL3lwcTQrNkhESWhSOWwwQy9rYmxROUk0L2YvalVtTmdWUUVxZ2tqdERGZ1N4M2NNbAoySXowbGdZaUlZbFdMbk5ZTGZ1cmdoK3FXcUFvaG9BY0JMNktnbDdTaTBIbTY3QmZpdUdlUFpXa1BTenNnSWJRCnFhTWZHYnc1cS9ZTUhqcERYRUhQeUZ6M0pKMU1yRDRyT08zK3grb21FSXRnOWZXaVVIaGpQR0NyVUh6MG1wN1MKVFZvUFE0bDlGTisvd1BzNGdiMWszbklTamNyS1Vud04vQis2SHdJREFRQUJBb0lCQURMVmpPem1EbUFCa2lnTApDOFR2U0VJU0wxd0dmSWUwQ25Oa2RIVXU4dFhFNDhEdHFxRFdCM1hyL04yR1VWTFlVM3JhOTNVMmlPTFBnZGNpCndYeHJiWkNSNDUzUkQ4WVhSRGJKMU8rMW9ISHZKbEsvVEoxckdZeUYxdlpBekI0MUlYSzREeVkwK2wrU0FYRlQKV2lYMHpCOVk1aDdmQytwdkF5L0daRG85OEM2R1hVcmRnVmpTNzhncXVZRy9yQmliZUpNKzhMN0JiQjl6M0p3SwpENGtrRWpNSU9xOTI2MmVsM085NjVlY1pETXFEWkN3OHdtL1R4eEU3WmFYOFprWWEySm03bWNQbk1ZVmlheHo5CmtGcmJkdW15aWlpczcxQVROVDZ6VUZzN0diTjMxcm9UVXlqU0VkelUwZ2RzcXNjUW1tSi9OUzg4SFlreWpPSmcKaWRGN1BsRUNnWUVBMlpUb0VwbGhEV3kzR0VnM1VZSGo1cy9sTGVCaXNCMWsxdmpRS1A1bWtxVUlDT1UwV1oxZQpXT0lDTFVrNTd4SjhXZnpxeGlSTStNbm84QTFxN1JQVEVpaGUzb3Y0THI3bFh4SWVVakNORFNnZjdOb0lzZkpTClY5RllPczBJdjIvT1lxLzFIT3RZMndKK0o4emp5azVESGNHQlJ4U2FIUzBJWC9mMFRrK1hhSU1DZ1lFQTZmWEEKVlFHdVF4bGhHclh4MFhPU29qRDFWVnZJdXNpVnZvZ04xZkdwSFdBUlRJSzdWU2ltdXFNQ0E0emVNelBMTmNWRQp1S1JaL0kwMmlGWnI0cFhrU3lPZ0pXakFnSE5aWGtrSjZuSUc0eTZpbHV2bHFzL2tYUVJyVWE2enpQa1RZazVCCnVaa09CMkRna1JWR1ZxSHhrTUdkd285OEpSZW9yc3NtOW0vYTNUVUNnWUVBb0V1ZHRhWWQ1Q0FGdS9Qb0hUcE8KUmtzL0VrOVBKV1JpV0NXeVphRVd2RTZzM3JETm9uL1hkQy85WHBPbUJNVmZxNFF6Q29yUDBqSWVWRXZ1VEg3ZwpiMjRpaGw0a0YzdzN5NVN6bGVXQzVRQjhsS2dFNCtRY1dlbzIwQXNodUxlTUd4UjZ4alYwbnRUMVVDa1lZSURMCjNXNGo2ZFA1dmlqaEZLSzk3N3VmVmpVQ2dZQkVoRlVjVUE2eDFlZnJRNmViR0lheit6U09HQUEwTzNRblJYOFAKemVNaUdEVll1OXlTOXdIRkhPSUZHaWNreGFGWWtQb3NQTzJobWRXRG5oT2dXeGR0cmZSRG9HYm45MkFQemNJYQpwK1ErZWpUaGtCcEZxUGFQQ3pGR3phd1lka1ZuLzlVZHZxWXVJUUFEWFVDcE5Hb2pZNkNKRHk1alNvZDdFVUhLCjREMHZsUUtCZ0hOeVR3UHhXTVFTa0RiWHBHeWlYNnFpWEljV2Zzdk4wcjR0VG9wS1NsVVBRdlc0WFRxLzY1SVIKUUJ5N0N0RThkTnlZeUpCeUhmdlMveThsd0FGSEpUN0g3OFJhZFd3VFdFL3VqOVB2M0s0YWJLZUpCYXlhcTZUMgpiQTlMRFFZR3EzcGpaeXhtdkZmRExvNmxUQzkzeDYreWZtZnBFYnZpVHJPeTg0MjNVVlNHCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuSHpJSnhmdktTTXdiUmpZblFyMUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TkZvWERUSTRNREl3TlRFNQpNRFl4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4dGxtTXZWUzBYVGRDSnNPMGp6RmIvcG1HbzNlRFFiNFVpRFJxbXhkbGRTd2V2NmUKTjFMS2pNKzZPWENvR05iK1hpbHAxT0ZDSHgydS91RGVkcFlVU3E0U1pIMi9ZaXlYYk1zNENpOWV3bXBwMDhZcgp4YzlGbER5UDBPOGkrZEMveXBxNCs2SERJaFI5bDBDL2tibFE5STQvZi9qVW1OZ1ZRRXFna2p0REZnU3gzY01sCjJJejBsZ1lpSVlsV0xuTllMZnVyZ2grcVdxQW9ob0FjQkw2S2dsN1NpMEhtNjdCZml1R2VQWldrUFN6c2dJYlEKcWFNZkdidzVxL1lNSGpwRFhFSFB5RnozSkoxTXJENHJPTzMreCtvbUVJdGc5ZldpVUhoalBHQ3JVSHowbXA3UwpUVm9QUTRsOUZOKy93UHM0Z2IxazNuSVNqY3JLVW53Ti9CKzZId0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSi9MdDhTZFlncUJqRUk4V2JRUEYxWG95ZGk0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZmamdUMHllQUZEcEMrTHBGcVN3Tm9MTWpjQVhSMFNxZDVhVjc5SnBNaWRTY0NDM3NwNXNZCndsc3BCdXhZZU5xOFdTU1lpY25uNWtCcGJhZS9WVVVMMnFuSSthdStZMTBWQlI2dXdTVjFFUDlVa1BoS0hrU1MKakE5M2dIMks0Y2VSeEJ2VnV1YTRoTlV0REU4Zm5mYnRmRFoyY3BCZTJtN1hVbW9jWHhCVlJoYnluQzhoblNjYwpBOGhEMzljNU1kTnJxU0RVVGlIZjI5RXNUU1d5eFdpbGpTMXRwS1BxekMwOGdkWVJkYm1iZ1pBWlFYUElVRnZKCnBJU0Y2WG9Iai85cGoyelp0emJjaEloTExvV0Q0VFVQR0hRTHEvREZycjUxdlpxSjlSd2xJdzZidGpEd2pUcDkKaitzdlNLbDJPb2J3SHV3QmpOcW5sT2M1d09tU2NGKzIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGakNDQWY2Z0F3SUJBZ0lSQU5qVzFkMlZxaVg2MDhRbDc1VUxRbTR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TkZvWERUSTRNREl3TlRFNQpNRFl4TkZvd0Z6RVZNQk1HQTFVRUF4TU1ZV1J0YVc0dGRHbHdZVzVwTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGCkFBT0NBUThBTUlJQkNnS0NBUUVBeTgzWnFnbHQzY1VWVUx4QXZwZGZpdno5ajlZeWZpTnZJUktDUUoyM1haak0KRnFhUWRGWEpCVGtzSFRDdlg5a0RDL3RFRGd0eUxTK3RPSWg4Q3dOZVdpRHhxRkxCam9SV2U2SUs1TjVBN3JOQgo3VFhDMVc0S09OMmhtMFNPUUZ1KzZzOHdaV0ZneXhlZ3BvaUdYaUxzYjlHeWJaU0pDUVpPWHFnZHZZYkZ3NUdJCkkrUE41eUZlYVNocVFSdG51dVdaMHJFblBURmhFRWxMdmd6NEhwMTZrNWlkZXRBcmsyeE9kbE53ZVczcDlqckEKM01EWWRDeUhVV1RES013eTlyUDVNdjQ3SncyTVdIZys0dzNxUmtpUWM1TzdKemFpTURYVGtoVDBYb3k3VEhHagpGdjVsbWpLWmkzNTRUcnJGbzA2NFZiOFBUeUpBMENwTEpLTjl3SXNEUHdJREFRQUJvMkF3WGpBT0JnTlZIUThCCkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIKL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVbjh1M3hKMWlDb0dNUWp4WnRBOFhWZWpKMkxnd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBTHBHR3FmY0Q5OEhqVnc3aU9XajIzMGVsMUhZMDQ3VUJZa04yQ1RKbVltSlQ0MlpHTzlxCm5FK0Qzalh6b2dNcmZJT0hhM0VHbGNkQTNNVzI4UlZkSm11MkVyTXRObEs2cVROWWttb0tnWmdmUXpXWjBkZlQKZVZHUkxKZXZzL2hnbkMrb3htdWtXVVY1WldEcndybG9PVVlMVG9rcllYanlFaUY5UmlKSHJSTXMyRlRZbDc3eQpSWXo4T1ZncHQ3aVFIelpjMkhJUHRCSnhpWVl4cjhEdVFwWlE1WVE1QmFtblJEQldEVmdjTkJTcUJDMm1WWlRCClFtWFloNVBnVUpqa2dJRTFaV3dFQWpjVnhHam1HLzhEWlQxUE5wbVgvSHJrYlRESzJvYzRGRm1uK28xK0ZpVjEKVnRDQWtCcjNYZlc3dmRVZHRTc1FXeXRmMUJ0T21BaXkyakU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeTgzWnFnbHQzY1VWVUx4QXZwZGZpdno5ajlZeWZpTnZJUktDUUoyM1haak1GcWFRCmRGWEpCVGtzSFRDdlg5a0RDL3RFRGd0eUxTK3RPSWg4Q3dOZVdpRHhxRkxCam9SV2U2SUs1TjVBN3JOQjdUWEMKMVc0S09OMmhtMFNPUUZ1KzZzOHdaV0ZneXhlZ3BvaUdYaUxzYjlHeWJaU0pDUVpPWHFnZHZZYkZ3NUdJSStQTgo1eUZlYVNocVFSdG51dVdaMHJFblBURmhFRWxMdmd6NEhwMTZrNWlkZXRBcmsyeE9kbE53ZVczcDlqckEzTURZCmRDeUhVV1RES013eTlyUDVNdjQ3SncyTVdIZys0dzNxUmtpUWM1TzdKemFpTURYVGtoVDBYb3k3VEhHakZ2NWwKbWpLWmkzNTRUcnJGbzA2NFZiOFBUeUpBMENwTEpLTjl3SXNEUHdJREFRQUJBb0lCQUY2Q00vakU3SnpWd3QrdwpuTG1GU3JvU1BhZFE1aE5XYlRkQjlRTHY0Rk5ZQXZSU0ExVGZYeHU3K25nQzFxQzA2dFBJampPUkhUNVZDSmZaCnV1UUVpT0YwdTN1Wi9NWVJHbVcwckNhYjVqS0xEL3huWE5WS2RSVVB1ZHhkdXpXZkZmYWZZOHJ2a0VvOXg3TFMKUnJVcXJzZmZ6MFUvaHhpWFF3cGtIWDZCRy81bkRvQ05EamRxT09hMWNuVGY5Sk85eTAzN0pibUI4and5UlJPNgpoRlZJNlF4MzRVWi9mMGJpeVRXSjJ0SVRVV2E4RmFNWVBBSXcvWUc2aGlUd3owV2prVDdpeHM1cUZjSmRHMkRECnNPa0d0cFROV29sZUl1d0lKakc5VTVmK05CZ2RmdVZsNVpGSW05RkZEaklRZVRwd1lPSHlHdUxUVUQvdHFleEEKWk93NkZ6RUNnWUVBenZFOVlkV1pXTTlPZ3B3dnpNNUI3RUZuTTUyZW4rTm5MbWtPbmxkZlBqQW5ORlFOSTBnbQp5enl2eGZvWjFYakZoUVNlL3BRTnBMUFNTVHpET2lIOGkwRnU5T2tiQXE4czJMT0RNOHUvNFdHMHFSWEd2WW5ICnVGSmJxQThqNlFiMlN5L2tmQytuYXV2NFUwakNHZGUxb3JGZjBnZ2IydGdMVGVLYmY2akt3dmtDZ1lFQS9CNG8KeVhLdEtKd2RPNTJuNEVVQjlsMmZtdEVaR3BrMjJFQWh3UnlTVTBuME5yZHBzOXlSbWdpTDNkQndCbjFjZHlULwppRjJiTWF4QkVGSU5rY2dxc3NCeEdHeTVhb3lqaFNLSkNnMFFqeGtkdlNrK3FkeGJaMzNLNUY2T2hCa2t5cFR3Cmo1WUIrRm5yMnVMOXZWVjRNQmtEVXJMNGwydjgxMnVLTDNka1RmY0NnWUVBdUFTUzViMlA2QVlvTlVKM3l2SWEKY3VEUnlYYyt4OFRxU3IzRzd3eVl0KzhQM1p0a04xeUFpcmREUXBRY2h0UW5LQnFzMjRxQisxU2dDTm9NYkZRdQpneEpEZldzUHhycEk4Y1huUkpiSTRMMEdibGpiNmsxcm1MODdtOTBpdktPaFBjaXZyN0tjZUJxdkxqZ0R5Z0VrCkZqRU9HUEYyKzRxanVyVm9Pd080a2RrQ2dZRUEwYW12RjZBVFduTkJhRU42eVduNThNejVId0dHMC9UWWhFd0oKQmhSaHAzd1g2S3pzN1pPZlRpNlBTajY5K3RlajNyMVkrQ21JRjIzOWlib0M2TnBDai9hejFyRU1IUXlxSzl5RgpoR05MQXdYTEVuVkxWRzBaWWw1ZExUOXBXM2VoZmdzUVp3aER5U25XbDJndnhaVmZadmhXS0I4SDFyMEtQb2VECkdtZzZkUThDZ1lFQWdJV1YzRThuQ1d2Y2I1WVBrNnFkU2ZmcWhFczhXUnc3b1Fkb0duT1NiS3g3RGVXanZGSUQKb3l3NWg3UDluQng2N1B2L3U1ZjJ0V29NbGVvem14RSt6UGlTcUVrQUpuKzhJajlKWUM0ZEtGTXhtUEtjMEJzZApLWFpYR044aTJ0Uy9adVRGZEdwcERETUhnOStoTTA2aDJhYlJKejNMeHZsbkZtZ0tva2E4eVBvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuSHpJSnhmdktTTXdiUmpZblFyMUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TkZvWERUSTRNREl3TlRFNQpNRFl4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4dGxtTXZWUzBYVGRDSnNPMGp6RmIvcG1HbzNlRFFiNFVpRFJxbXhkbGRTd2V2NmUKTjFMS2pNKzZPWENvR05iK1hpbHAxT0ZDSHgydS91RGVkcFlVU3E0U1pIMi9ZaXlYYk1zNENpOWV3bXBwMDhZcgp4YzlGbER5UDBPOGkrZEMveXBxNCs2SERJaFI5bDBDL2tibFE5STQvZi9qVW1OZ1ZRRXFna2p0REZnU3gzY01sCjJJejBsZ1lpSVlsV0xuTllMZnVyZ2grcVdxQW9ob0FjQkw2S2dsN1NpMEhtNjdCZml1R2VQWldrUFN6c2dJYlEKcWFNZkdidzVxL1lNSGpwRFhFSFB5RnozSkoxTXJENHJPTzMreCtvbUVJdGc5ZldpVUhoalBHQ3JVSHowbXA3UwpUVm9QUTRsOUZOKy93UHM0Z2IxazNuSVNqY3JLVW53Ti9CKzZId0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSi9MdDhTZFlncUJqRUk4V2JRUEYxWG95ZGk0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZmamdUMHllQUZEcEMrTHBGcVN3Tm9MTWpjQVhSMFNxZDVhVjc5SnBNaWRTY0NDM3NwNXNZCndsc3BCdXhZZU5xOFdTU1lpY25uNWtCcGJhZS9WVVVMMnFuSSthdStZMTBWQlI2dXdTVjFFUDlVa1BoS0hrU1MKakE5M2dIMks0Y2VSeEJ2VnV1YTRoTlV0REU4Zm5mYnRmRFoyY3BCZTJtN1hVbW9jWHhCVlJoYnluQzhoblNjYwpBOGhEMzljNU1kTnJxU0RVVGlIZjI5RXNUU1d5eFdpbGpTMXRwS1BxekMwOGdkWVJkYm1iZ1pBWlFYUElVRnZKCnBJU0Y2WG9Iai85cGoyelp0emJjaEloTExvV0Q0VFVQR0hRTHEvREZycjUxdlpxSjlSd2xJdzZidGpEd2pUcDkKaitzdlNLbDJPb2J3SHV3QmpOcW5sT2M1d09tU2NGKzIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUp1OHN6QU5pUTcwOTlrbjRNcHB3RjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TkZvWERUSTRNREl3TlRFNQpNRFl4TkZvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQTB3OEpta2U0NU54dzBPRHRyUTNJRnozZWkxYlBkNHlIL3M4cWE3VnVSQnJFT2ZaMnY0bWUKTDl4QWF4U2F4ckRwU2dXZWhzeTlUSWhTRU5kRW9SNCtHbWdnMFlNaE9BMTZYR1Z4ZUhDMDE5VVNLUVNzdy9ybgpTSzViaXhiTUhXU09oZ2tGWVpzSUhKaFIrek52aFExUU9qV2JGQWpxZE0wcC95aTBLQmxjZVhFbGxyZVFMTXZTCng4WEVUdTdleWZvT3RORDNwczJoTGo5SHJjVDhKQzlDZG8wRXh2bnlBT1cyM3I3Qkh6dWhxanpRd2JZNFQ5UjUKODIvRi9xUmNQWkdCVFVlVVhVZ2d0WWxpNXZ4Q0JBSDhmK1gzQkJzUDdHMmNWbkl0TXBDeDZEcXNLa0IrMVFTSgpESCtxM2tVbzJuQmRHeDRvZFhseTZyY0JOT0tyUURCdnBRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVW44dTN4SjFpQ29HTVFqeFp0QThYVmVqSjJMZ3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUNFSjlWVEFqbkdyU1NsNmpTeEpRUmJlMytlWmtueFFYMGZJRXgxd2U2NFFYL1ZlL2F1SGR3bFBvbDJlCjhyTzA5Rll2TmVabTdEb3o5YllpRHEyMTEwbENvSDNhOEJETGxZRTB6eEZjbjRzdWMzRnlpTUtwWmxwK2psOWEKUXNOR00zcHdIZFR4K1pWTlB3cWloemFUY3FRN2VxR2NJRFFWVDJOSFRiSmFwRUJBRjB1RWdnajlFMFZ4aERndApIanJyTlNoa08xQUQ5aytSUkJHMzFmRERlTm5xV2hlMzVOc3hPbEdEQW9VVURUU0JCSG9sYkFRY0JGd0orOVRWCjVOcUlDanZaR2RpZ0FCcEpEVlhRQWpDSFpoenlDb1BJSWhDdkpsWWVyZ21DTzNhNCtPUjlRKytRaDRaNDhHTjcKZit3azdJRGU0T05FT1Njd0kyVnE5SFZyUU1vPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMHc4Sm1rZTQ1Tnh3ME9EdHJRM0lGejNlaTFiUGQ0eUgvczhxYTdWdVJCckVPZloyCnY0bWVMOXhBYXhTYXhyRHBTZ1dlaHN5OVRJaFNFTmRFb1I0K0dtZ2cwWU1oT0ExNlhHVnhlSEMwMTlVU0tRU3MKdy9yblNLNWJpeGJNSFdTT2hna0ZZWnNJSEpoUit6TnZoUTFRT2pXYkZBanFkTTBwL3lpMEtCbGNlWEVsbHJlUQpMTXZTeDhYRVR1N2V5Zm9PdE5EM3BzMmhMajlIcmNUOEpDOUNkbzBFeHZueUFPVzIzcjdCSHp1aHFqelF3Ylk0ClQ5UjU4Mi9GL3FSY1BaR0JUVWVVWFVnZ3RZbGk1dnhDQkFIOGYrWDNCQnNQN0cyY1ZuSXRNcEN4NkRxc0trQisKMVFTSkRIK3Eza1VvMm5CZEd4NG9kWGx5NnJjQk5PS3JRREJ2cFFJREFRQUJBb0lCQURKcHR4dDQ0anNZUklKQQpGOFZzTTAwSjVDeFlNZm9XUVMybUFqWDBBa0NXUENTME1DMFVEQXJXaXpTSW1XZTRQaUVHTXBWME5nc2Z6S3BsCklPbHpOZFpNNVBubVhucnJEVDBncGZma3crMkI0WEtXd1VXV21zUUxrYVlwYmR2ZmR3T2hCLzRHYit1VW5wQm4KK3MxSEh0Q29tVUF4MlA3Sk9xek41aXBsMUdiVkp0eUlDYXJ5WitkK3FidCs1cHhPdXFRZ0U3YTg2SmFHQUNCaQo4TWNTV1hHYW9nakEvMFNLSVpIZ0lCRlNSRmJRWmFuT1hoTkVOL0ozd1lUNU1NZ1pmNXVEeDBFVEtjak15MktvCko2TlpweDBJSFlOUVRFS0pkS1JIMG16OStDbU9uUStENXk5QzBVM1VBMmQxdjJFVjR0bkFGN1ZhMi9SRWhxRG8KckR4OUFvRUNnWUVBN0JRSmdCaUgzNFkwRS8vbUV0em1GblB2YWM3bTJLZThoY3pMQ1FzbHplR0ZYUGlNdWttawpUaWZqeFJDeVBqYzJ2UTc0Z2hacjJsWHp4ODYrTFFIaXBGRER6V29jc1FJL0hOSG1XMDhpZmhUSGViRzI2eWxjCnJmS0tlMTVUbUkvSTNJUlFFMFFqM2h1RGRYQkdnLzE4V1E3bWE5Zk1mYUFaNDIySEYzaENmREVDZ1lFQTVONkIKM3pzbk9DT3FWSGJMeTdYSDRJYlVpZ2sydzM5dnRnaE9TRjJTcjlEWnJNbXpMWjNxekYrUWl6RmxyWHNmZy9KQwpGSVordHJwZXA1bFYrMmRYdkZ4VEVEdWthQlNFK3ZaeVF3Tzk3YlhOYnBTSFJ6akl5dGQ4TEpsVGpNOWJDV2c4Cng3K3VoS25LNWc3RDBwTURsZVUvZHV6N1JVN0syL0s5TUpmdGNiVUNnWUJPbHVrR3ZLUFcxSDFYdnhPZmFld3EKdzFPTEhMYWFuMVJTRW5md3ZjWkxBRzErSXJ2dWMvOS9pU1g0LzNMbTVVaVNyWDRyQ0QzRlJHSFFQVkh2OTdXMApUN0t2R2trTTRCdVVnNGUxRStYK3BQbzIxK04xNjZJUHdqTTVtSkFwdEl3QVpRZW5Na0xpZUxSTmp4L2Fack5UCmpuTkVxV1ZJMk5obGJwdlBRMWlXc1FLQmdDeDh2OXZuZ0trZDdhYjdiSVBOY3V2RzZadG5UUmpWTlo2NW9KWGEKY24vd1pjOTdhWFBOaFcxeWlnTTBkK0l2MDZGdlByOEVvYTdkTFRjQXpFRFJCckhiZEYzc2FmbTlPMWdZL1g3ZgpSRlRuaU9ZY3d1cnFNOFdSKzFZais2U2NUY0xYV3pFc3BqeXRVSDVGa25UbEZNWlhTRzNTaE1rbEZyT0lUSlFjCmhCQWRBb0dCQUlXOVFqRTdWTGdsdU15N3BQc1dZc1UzNkdIN24zNkRnNHpwTkFna2dFcytldC9XNFpxTG82RDQKYjVTQmpsYUluckhTTjRoaHYxYkNIM0pGTnRlVk5OTkZhSmdyWUtWaUIwOXQvRmdyRXpJVFM4Y1ZqN2F3VlZnMApnbFBac21PamdwbGFHd1ZndnFSa2ZUQzJSTmFhNXRGWVRkT3F2TUdxbVRabklCUEF3QmtLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuSHpJSnhmdktTTXdiUmpZblFyMUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TkZvWERUSTRNREl3TlRFNQpNRFl4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4dGxtTXZWUzBYVGRDSnNPMGp6RmIvcG1HbzNlRFFiNFVpRFJxbXhkbGRTd2V2NmUKTjFMS2pNKzZPWENvR05iK1hpbHAxT0ZDSHgydS91RGVkcFlVU3E0U1pIMi9ZaXlYYk1zNENpOWV3bXBwMDhZcgp4YzlGbER5UDBPOGkrZEMveXBxNCs2SERJaFI5bDBDL2tibFE5STQvZi9qVW1OZ1ZRRXFna2p0REZnU3gzY01sCjJJejBsZ1lpSVlsV0xuTllMZnVyZ2grcVdxQW9ob0FjQkw2S2dsN1NpMEhtNjdCZml1R2VQWldrUFN6c2dJYlEKcWFNZkdidzVxL1lNSGpwRFhFSFB5RnozSkoxTXJENHJPTzMreCtvbUVJdGc5ZldpVUhoalBHQ3JVSHowbXA3UwpUVm9QUTRsOUZOKy93UHM0Z2IxazNuSVNqY3JLVW53Ti9CKzZId0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSi9MdDhTZFlncUJqRUk4V2JRUEYxWG95ZGk0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZmamdUMHllQUZEcEMrTHBGcVN3Tm9MTWpjQVhSMFNxZDVhVjc5SnBNaWRTY0NDM3NwNXNZCndsc3BCdXhZZU5xOFdTU1lpY25uNWtCcGJhZS9WVVVMMnFuSSthdStZMTBWQlI2dXdTVjFFUDlVa1BoS0hrU1MKakE5M2dIMks0Y2VSeEJ2VnV1YTRoTlV0REU4Zm5mYnRmRFoyY3BCZTJtN1hVbW9jWHhCVlJoYnluQzhoblNjYwpBOGhEMzljNU1kTnJxU0RVVGlIZjI5RXNUU1d5eFdpbGpTMXRwS1BxekMwOGdkWVJkYm1iZ1pBWlFYUElVRnZKCnBJU0Y2WG9Iai85cGoyelp0emJjaEloTExvV0Q0VFVQR0hRTHEvREZycjUxdlpxSjlSd2xJdzZidGpEd2pUcDkKaitzdlNLbDJPb2J3SHV3QmpOcW5sT2M1d09tU2NGKzIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQUk5UWlTS2Rnd2c5UVFkTFJpc3BNNjh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURJd05URTVNRFl4TkZvWERUSTRNREl3TlRFNQpNRFl4TkZvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxiOHFCRDhSUXVvdVk3b3NMeEYKSVhNWnFaNVhYV3R3MUo0ZTg3bFhNY0NEWCt3L0FJRzVETVl5OTNWQjdidlQrTmxKbmxsSTJKUHpuYWl1dDdwZwo5RWRZMjVnbXlEUWVRdnBRSnRaRHJaaHZiNVk5dStGUm90UEdNNCtka2plT3pySzNITzVRc1BQNHJiWTVVZHVNCmNUdWdjeXBDQzRpeEhGN3JobXU2eGZPdi9Sd1pYakJMaVhDdGZHWk5WREpEeWJheXJRcml6US9IbytFai9WWmsKRTJVOWdJcjNMY1kzaGZOWTNpdi9LaHhDbjF5bGQ0RVdkcEZGZ2h1WHJmSWNMWDg2bC9EeGtLaC9LcW4xSy9EZApuWFVIbW5BRFRRd0RHYURQRjhZVWR5NkZiMU5vTWh4cXJady9ucUcya1hmVFBDTmtnSnA1MStnd29YeFptRGRjCklIMENBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVW44dTN4SjFpQ29HTQpRanhadEE4WFZlakoyTGd3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBSEZMYUdLZWxzZTJIU2oyMzNKcHgvbDBQbFdIT3JtdUkyeHNhazBrdmVKa21kQm5CCmxjeDBiL3FSN1FBMnFSSElPQWhUTkJwVmhobURpUE9jVzVoZ2d6WURyRmpuaG5jMW0xWFlKcHpOMlhVK3hka2UKU0lVZWUxb21zbGdxTWd0STBJRW9WcDhQTVFxejJsZ2dTckQ4Qm5lb0ZuNU1LSjA4c1RsL3BmMCtwRktSQzdFNgpMM0RWSklMNmhOUjEya0RxNlVtY2IxYjRZeVdBK3NFczM0K3lZVlBOQkg3MnB3YTY3WTlkSEJZK21HaXk5NE5sCk9BUVgrUzZVbklhdUdzd01rWkJDWnlDVFNOMmp6TEF5aTNyeFJjdWJxUHRKODQ5ZEZLVlNpNjBlc1ZHOVZkbXgKVWc1SjJMSDdNYnAxZEdMM3BqUnVmTklnL2s1N3Y4U0NCRkpIVWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdHZ5b0VQeEZDNmk1anVpd3ZFVWhjeG1wbmxkZGEzRFVuaDd6dVZjeHdJTmY3RDhBCmdia014akwzZFVIdHU5UDQyVW1lV1VqWWsvT2RxSzYzdW1EMFIxamJtQ2JJTkI1QytsQW0xa090bUc5dmxqMjcKNFZHaTA4WXpqNTJTTjQ3T3NyY2M3bEN3OC9pdHRqbFIyNHh4TzZCektrSUxpTEVjWHV1R2E3ckY4Ni85SEJsZQpNRXVKY0sxOFprMVVNa1BKdHJLdEN1TE5EOGVqNFNQOVZtUVRaVDJBaXZjdHhqZUY4MWplSy84cUhFS2ZYS1YzCmdSWjJrVVdDRzVldDhod3RmenFYOFBHUXFIOHFxZlVyOE4yZGRRZWFjQU5OREFNWm9NOFh4aFIzTG9WdlUyZ3kKSEdxdG5EK2VvYmFSZDlNOEkyU0Ftbm5YNkRDaGZGbVlOMXdnZlFJREFRQUJBb0lCQUVzeHloS294K3JCbS9iNAo4ZDk3L1FIaWNzeEpsRzhaUDVYMm5DcjJoTkJhYkNtVnZpeVFrWXBFMldHTEJSbGhRdXB2a1MyWmZMNVhwdHJ4CmFUaWlyTjlBeVlSZHMzbVBVZkN3elRUUlBOM2VOUm1sSnJheHFGcWtJUDRNUDFDclU0OG5KakZjWVVyd1R0b0oKOWZSbFl3YWdxWktjNzBadG1YMzhCUkh4LzNSaWsvMXpROS8ya1RBTlY2VjRRV0c3T1o1RHNNanVZc0Y3dDBBTgprQkk0d1UvZXpWd3A3b0RwTXlqV2x5RjgveFpPUWZGTXNBNFh6N0xZQmZJY0RuSTFEY0RXZ1hnMDZ5dDg3QldICmdaMnRBSjc2SEhDSnI4aDRwcDFOejR6alFyT2pxRmkrSlhycnlMMnlFUWpsODZwN0tEM2pJNTByOWRIQkFSRmIKUTMrRWlSVUNnWUVBeHlOb3IxcGdjbFAwanNkK1pjMkN3a1BYT3Y1aThUUldCOVVpdjVuejJmOHRGSXhqSlJXOApERUlRNXVMUlJZWUVZdzgrZk9CQUQ1eUd5ZUduWHRMR3djZDQ5OUd2NC84cHJRRkR6eTFjZW1vZlRBc1BWZndiCnNleWxjK3lweGlkUEhEai9FTUJRQ3NaNGw3bmI3Q05nQmhkSEs2MlVQM0ZqM29GMFgzN1BEMmNDZ1lFQTZ6eWQKc21ON3pnUXpzcmx2VjdMYmNUdllKL0lHTlBjdnlOdjd3OEFqUlJnblcycXMxbkYvK0k1alJyNXVpVVdFVE4yWgpUd2c1UEZYZVBpYmpuUk9sZGJNc0R3ZFlpRUtPZ0VUTTcrNHJnL3VSVXc0MkszVFo0eGJSck13TnJuR014VEFLCmh0ZkFyVGhtMU1OWHNGeXFLcWl6RnlkbVFaek9QSnBlNExwZ05uc0NnWUVBbWtyTEg2SnN1K2hrd2dPNzRYRGIKOFZ6UzlIaUpmTTNLSW9OM1N2RWp5VEkzWVlac2d4MVYrRUZ3Q3hTT2hNbVR1SlRsRzZnOHVsdlM2N1NWRTVsSQpPbmd0T0FZVnZCZkYySy8wTkIrM1dYbkVDZzAvc3FXRlo5UXRWYVoyM0hzMGhtOTY0U1hBWHJqc1V0TEVuUy9ECmhMU2doaTBWZ2hwL0FMVll6MnpYVGQwQ2dZRUFxa01PZFE2eWpuUFdJM2M2VXNTZk5uODFQZnhjWjd1K04yaVoKK3A0NEtRdUplUTVtR1RTL2hsMHhHQVEvcDFYTW80SUZOQUhrdzNuM1NROEcwaXRsS0NMT01mYUVLdVBabHBlMQpxYmUrZ1dIMVZxTkRyQUtBcm5CV3hQWlF0TUYxUFVnL1prZ0ZLcHRYT29wRkR0NlRRQnNvdlFxRVpkc2tIeE13CnR3SFBINzhDZ1lBOUt0SnBXSk9BbDJQUDc2VURDRHVZQ1pFblk0MzJoUWpOdVZOSkZTM2o5ZWFKd3M4Tk1DTzkKUkxrL2F0UzRENnM3WXlVczQzRVpRQzBIQ21GaVpZYnlWTXNSWi9hV3Q2eDBqazEzUG9RVGd5Y3lJRHlSVE1GSgpmR1VJTEJ3dUtNWERKTUcwc1JJYUMrcS92Y253b2k2TDdTWDUwZHIrNms4OEZ1NmtBNjBaNnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-config/clustermesh-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-clustermesh
  namespace: kube-system

data:
  everest: ZW5kcG9pbnRzOgotIGh0dHBzOi8vZXZlcmVzdC5tZXNoLnplcm9sYWIubGluazoyMzc5CnRydXN0ZWQtY2EtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC1jYS5jcnQKa2V5LWZpbGU6IC92YXIvbGliL2NpbGl1bS9jbHVzdGVybWVzaC9jb21tb24tZXRjZC1jbGllbnQua2V5CmNlcnQtZmlsZTogL3Zhci9saWIvY2lsaXVtL2NsdXN0ZXJtZXNoL2NvbW1vbi1ldGNkLWNsaWVudC5jcnQ=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd", "kvstore" or
  # "doublewrite-readkvstore" / "doublewrite-readcrd".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  # - "doublewrite" modes store identities in both the kvstore and CRDs. This is useful
  #   for seamless migrations from the kvstore mode to the crd mode. Consult the
  #   documentation for more information on how to perform the migration.
  identity-allocation-mode: crd

  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  policy-cidr-match-mode: ""
  enable-envoy-config: "true"
  envoy-config-retry-interval: "15s"
  enable-ingress-controller: "true"
  enforce-ingress-https: "true"
  enable-ingress-proxy-protocol: "false"
  enable-ingress-secrets-sync: "true"
  ingress-secrets-namespace: "cilium-secrets"
  ingress-lb-annotation-prefixes: "lbipam.cilium.io nodeipam.cilium.io service.beta.kubernetes.io service.kubernetes.io cloud.google.com"
  ingress-default-lb-mode: dedicated
  ingress-shared-lb-service-name: cilium-ingress
  ingress-hostnetwork-enabled: "false"
  ingress-hostnetwork-shared-listener-port: "8080"
  ingress-hostnetwork-nodelabelselector: ""
  enable-gateway-api: "true"
  enable-gateway-api-secrets-sync: "true"
  enable-gateway-api-proxy-protocol: "false"
  enable-gateway-api-app-protocol: "false"
  enable-gateway-api-alpn: "false"
  gateway-api-xff-num-trusted-hops: "0"
  gateway-api-service-externaltrafficpolicy: "Cluster"
  gateway-api-secrets-namespace: "cilium-secrets"
  gateway-api-hostnetwork-enabled: "false"
  gateway-api-hostnetwork-nodelabelselector: ""
  enable-policy-secrets-sync: "true"
  policy-secrets-only-from-secrets-namespace: "true"
  policy-secrets-namespace: "cilium-secrets"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "true"
  bpf-lb-source-range-all-types: "false"
  bpf-lb-algorithm-annotation: "false"
  bpf-lb-mode-annotation: "false"

  bpf-events-drop-enabled: "true"
  bpf-events-policy-verdict-enabled: "true"
  bpf-events-trace-enabled: "true"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: tipani
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "1"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: disabled
  routing-mode: "native"
  tunnel-protocol: "vxlan"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-tcx: "true"
  datapath-mode: "veth"
  enable-masquerade-to-route-source: "false"
  enable-wireguard: "true"
  wireguard-persistent-keepalive: "0s"
  encrypt-node: "false"
  enable-encryption-strict-mode: "false"

  encryption-strict-mode-cidr: "10.122.0.0/16"

  encryption-strict-mode-allow-remote-node-identities: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"
  iptables-random-fully: "false"

  auto-direct-node-routes: "true"
  direct-routing-skip-unreachable: "true"
  enable-local-redirect-policy: "true"
  ipv4-native-routing-cidr: 10.0.0.0/8
  ipv6-native-routing-cidr: ::/0
  enable-runtime-device-detection: "true"

  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  nodeport-addresses: ""
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-mode: "dsr"
  bpf-lb-acceleration: "disabled"
  enable-experimental-lb: "false"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "false"
  arping-refresh-period: "30s"
  k8s-require-ipv4-pod-cidr: "true"
  k8s-require-ipv6-pod-cidr: "false"
  enable-k8s-networkpolicy: "true"
  enable-endpoint-lockdown-on-policy-overflow: "false"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-route-mtu-for-cni-chaining: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  health-check-icmp-failure-threshold: "3"
  enable-well-known-identities: "false"
  enable-node-selector-labels: "false"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "true"
  ipam: "kubernetes"
  ipam-multi-pool-pre-allocation: 
  ipam-cilium-node-update-rate: "15s"

  default-lb-service-ipam: "lbipam"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  bgp-secrets-namespace: "kube-system"
  enable-bgp-control-plane-status-report: "true"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  dnsproxy-socket-linger-timeout: "10"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "1000"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-initial-fetch-timeout: "30"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"
  proxy-max-concurrent-retries: "128"
  http-retry-count: "3"

  external-envoy-proxy: "true"
  envoy-base-id: "0"
  envoy-access-log-buffer-size: "4096"
  envoy-keep-cap-netbindservice: "false"
  max-connected-clusters: "255"
  clustermesh-enable-endpoint-sync: "false"
  clustermesh-enable-mcs-api: "false"

  nat-map-stats-entries: "32"
  nat-map-stats-interval: "30s"
  enable-internal-traffic-policy: "true"
  enable-lb-ipam: "true"
  enable-non-default-deny-policies: "true"
  enable-source-ip-verification: "true"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/cilium-envoy/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-envoy-config
  namespace: kube-system
data:
  # Keep the key name as bootstrap-config.json to avoid breaking changes
  bootstrap-config.json: |
    {"admin":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/admin.sock"}}},"applicationLogConfig":{"logFormat":{"textFormat":"[%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v"}},"bootstrapExtensions":[{"name":"envoy.bootstrap.internal_listener","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener"}}],"dynamicResources":{"cdsConfig":{"apiConfigSource":{"apiType":"GRPC","grpcServices":[{"envoyGrpc":{"clusterName":"xds-grpc-cilium"}}],"setNodeOnFirstMessageOnly":true,"transportApiVersion":"V3"},"initialFetchTimeout":"30s","resourceApiVersion":"V3"},"ldsConfig":{"apiConfigSource":{"apiType":"GRPC","grpcServices":[{"envoyGrpc":{"clusterName":"xds-grpc-cilium"}}],"setNodeOnFirstMessageOnly":true,"transportApiVersion":"V3"},"initialFetchTimeout":"30s","resourceApiVersion":"V3"}},"node":{"cluster":"ingress-cluster","id":"host~127.0.0.1~no-id~localdomain"},"overloadManager":{"resourceMonitors":[{"name":"envoy.resource_monitors.global_downstream_max_connections","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig","max_active_downstream_connections":"50000"}}]},"staticResources":{"clusters":[{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"ingress-cluster","type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"egress-cluster-tls","transportSocket":{"name":"cilium.tls_wrapper","typedConfig":{"@type":"type.googleapis.com/cilium.UpstreamTlsWrapperContext"}},"type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"upstreamHttpProtocolOptions":{},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"egress-cluster","type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"ingress-cluster-tls","transportSocket":{"name":"cilium.tls_wrapper","typedConfig":{"@type":"type.googleapis.com/cilium.UpstreamTlsWrapperContext"}},"type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"upstreamHttpProtocolOptions":{},"useDownstreamProtocolConfig":{}}}},{"connectTimeout":"2s","loadAssignment":{"clusterName":"xds-grpc-cilium","endpoints":[{"lbEndpoints":[{"endpoint":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/xds.sock"}}}}]}]},"name":"xds-grpc-cilium","type":"STATIC","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","explicitHttpConfig":{"http2ProtocolOptions":{}}}}},{"connectTimeout":"2s","loadAssignment":{"clusterName":"/envoy-admin","endpoints":[{"lbEndpoints":[{"endpoint":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/admin.sock"}}}}]}]},"name":"/envoy-admin","type":"STATIC"}],"listeners":[{"address":{"socketAddress":{"address":"0.0.0.0","portValue":9964}},"filterChains":[{"filters":[{"name":"envoy.filters.network.http_connection_manager","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager","httpFilters":[{"name":"envoy.filters.http.router","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"}}],"internalAddressConfig":{"cidrRanges":[{"addressPrefix":"10.0.0.0","prefixLen":8},{"addressPrefix":"172.16.0.0","prefixLen":12},{"addressPrefix":"192.168.0.0","prefixLen":16},{"addressPrefix":"127.0.0.1","prefixLen":32}]},"routeConfig":{"virtualHosts":[{"domains":["*"],"name":"prometheus_metrics_route","routes":[{"match":{"prefix":"/metrics"},"name":"prometheus_metrics_route","route":{"cluster":"/envoy-admin","prefixRewrite":"/stats/prometheus"}}]}]},"statPrefix":"envoy-prometheus-metrics-listener","streamIdleTimeout":"0s"}}]}],"name":"envoy-prometheus-metrics-listener"},{"address":{"socketAddress":{"address":"127.0.0.1","portValue":9878}},"filterChains":[{"filters":[{"name":"envoy.filters.network.http_connection_manager","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager","httpFilters":[{"name":"envoy.filters.http.router","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"}}],"internalAddressConfig":{"cidrRanges":[{"addressPrefix":"10.0.0.0","prefixLen":8},{"addressPrefix":"172.16.0.0","prefixLen":12},{"addressPrefix":"192.168.0.0","prefixLen":16},{"addressPrefix":"127.0.0.1","prefixLen":32}]},"routeConfig":{"virtual_hosts":[{"domains":["*"],"name":"health","routes":[{"match":{"prefix":"/healthz"},"name":"health","route":{"cluster":"/envoy-admin","prefixRewrite":"/ready"}}]}]},"statPrefix":"envoy-health-listener","streamIdleTimeout":"0s"}}]}],"name":"envoy-health-listener"}]}}
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: tipani
    peer-service: "hubble-peer.kube-system.svc.cluster.local.:80"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    disable-client-tls: true
    
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  - cilium-config
  verbs:
   # allow patching of the configmap to set annotations
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgpclusterconfigs/status
  - ciliumbgppeerconfigs/status
  verbs:
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgppeeringpolicies
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  - ciliumbgppeerconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status # To update ingress status with load balancer IP.
  verbs:
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  - tlsroutes
  - httproutes
  - grpcroutes
  - referencegrants
  - referencepolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  - gateways/status
  - httproutes/status
  - grpcroutes/status
  - tlsroutes/status
  verbs:
  - update
  - patch
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium

rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-tlsinterception-secrets
  namespace: "cilium-secrets"  
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
# Source: cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
# Source: cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-tlsinterception-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-ingress-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-gateway-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-bgp-control-plane-secrets
  namespace: "kube-system"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-bgp-control-plane-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-tlsinterception-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-ingress-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-ingress-secrets
subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: kube-system
---
# Source: cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-gateway-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-gateway-secrets
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-tlsinterception-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-envoy/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-envoy
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9964"
  labels:
    k8s-app: cilium-envoy
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    io.cilium/app: proxy
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium-envoy
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/cilium-ingress-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-ingress
  namespace: kube-system
  labels:
    cilium.io/ingress: "true"
    app.kubernetes.io/part-of: cilium
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    nodePort: 
  - name: https
    port: 443
    protocol: TCP
    nodePort: 
  type: LoadBalancer
  externalTrafficPolicy: Cluster
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics

spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: etcd-metrics
    port: 9963
    protocol: TCP
    targetPort: etcd-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: LoadBalancer
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
  loadBalancerIP: 10.111.0.10
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  annotations:
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium

spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: grpc
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium

spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer

spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 80
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: envoy-sockets
          mountPath: /var/run/cilium/envoy/sockets
          readOnly: false
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cilium-netns
          mountPath: /var/run/cilium/netns
          mountPropagation: HostToContainer
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.17.0@sha256:51f21bdd003c3975b5aaaf41bd21aee23cc08f44efaa27effc91c621bc9d8b1d"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          privileged: true
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      hostAliases:
      - ip: 10.171.0.10
        hostnames: [ "everest.mesh.zerolab.link" ]
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To exec into pod network namespaces
      - name: cilium-netns
        hostPath:
          path: /var/run/netns
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host or apply sysctlfix
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      # Sharing socket with Cilium Envoy on the same node by using a host path
      - name: envoy-sockets
        hostPath:
          path: "/var/run/cilium/envoy/sockets"
          type: DirectoryOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
          # note: we configure the volume for the kvstoremesh-specific certificate
          # regardless of whether KVStoreMesh is enabled or not, so that it can be
          # automatically mounted in case KVStoreMesh gets subsequently enabled,
          # without requiring an agent restart.
          - secret:
              name: clustermesh-apiserver-local-cert
              optional: true
              items:
              - key: tls.key
                path: local-etcd-client.key
              - key: tls.crt
                path: local-etcd-client.crt
              - key: ca.crt
                path: local-etcd-client-ca.crt
---
# Source: cilium/templates/cilium-envoy/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium-envoy
  namespace: kube-system
  labels:
    k8s-app: cilium-envoy
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-envoy
    name: cilium-envoy
spec:
  selector:
    matchLabels:
      k8s-app: cilium-envoy
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-envoy: "unconfined"
      labels:
        k8s-app: cilium-envoy
        name: cilium-envoy
        app.kubernetes.io/name: cilium-envoy
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-envoy
        image: "quay.io/cilium/cilium-envoy:v1.31.5-1737535524-fe8efeb16a7d233bffd05af9ea53599340d3f18e@sha256:57a3aa6355a3223da360395e3a109802867ff635cb852aa0afe03ec7bf04e545"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/cilium-envoy-starter
        args:
        - '--'
        - '-c /var/run/cilium/envoy/bootstrap-config.json'
        - '--base-id 0'
        - '--log-level info'
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9878
            scheme: HTTP
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        ports:
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: envoy-sockets
          mountPath: /var/run/cilium/envoy/sockets
          readOnly: false
        - name: envoy-artifacts
          mountPath: /var/run/cilium/envoy/artifacts
          readOnly: true
        - name: envoy-config
          mountPath: /var/run/cilium/envoy/
          readOnly: true
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccountName: "cilium-envoy"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cilium.io/no-schedule
                operator: NotIn
                values:
                - "true"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium-envoy
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
      - name: envoy-sockets
        hostPath:
          path: "/var/run/cilium/envoy/sockets"
          type: DirectoryOrCreate
      - name: envoy-artifacts
        hostPath:
          path: "/var/run/cilium/envoy/artifacts"
          type: DirectoryOrCreate
      - name: envoy-config
        configMap:
          name: "cilium-envoy-config"
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          items:
            - key: bootstrap-config.json
              path: bootstrap-config.json
        # To keep state between restarts / upgrades
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "b4b99b9d8fef7d436597bc3161db23ae9521312fdfd32912ead8e1ad412f9c76"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.17.0@sha256:1ce5a5a287166fc70b6a5ced3990aaa442496242d1d4930b5a3125e44cccdca8"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.cluster.local"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      initContainers:
      - name: etcd-init
        image: "quay.io/cilium/clustermesh-apiserver:v1.17.0@sha256:05ccf79102724a943b967337a7cd45177118b76b72fb937d0c8ecb3ce136605c"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - etcdinit
        # These need to match the equivalent arguments to etcd in the main container.
        - --etcd-cluster-name=clustermesh-apiserver
        - --etcd-initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --etcd-data-dir=/var/run/etcd
        env:
          # The Cilium cluster name (specified via the `CILIUM_CLUSTER_NAME` environment variable) and the etcd cluster
          # name (specified via the `--etcd-cluster-name` argument) are very different concepts. The Cilium cluster name
          # is the name of the overall Cilium cluster, and is used to set the admin account username. The etcd cluster
          # name is a concept that's only relevant for etcd itself. The etcd cluster name must be the same for both this
          # command and the actual invocation of etcd in the main containers of this Pod, but it's otherwise not
          # relevant to Cilium.
        - name: CILIUM_CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        # The clustermesh-apiserver container image includes an etcd binary.
        image: "quay.io/cilium/clustermesh-apiserver:v1.17.0@sha256:05ccf79102724a943b967337a7cd45177118b76b72fb937d0c8ecb3ce136605c"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=$(INITIAL_CLUSTER_TOKEN)
        - --auto-compaction-retention=1
        - --listen-metrics-urls=http://[$(HOSTNAME_IP)]:9963
        - --metrics=basic
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INITIAL_CLUSTER_TOKEN
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        - name: etcd-metrics
          containerPort: 9963
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.17.0@sha256:05ccf79102724a943b967337a7cd45177118b76b72fb937d0c8ecb3ce136605c"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - clustermesh
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt=etcd.config=/var/lib/cilium/etcd-config.yaml
        - --kvstore-opt=etcd.qps=20
        - --kvstore-opt=etcd.bootstrapQps=10000
        - --max-connected-clusters=255
        - --health-port=9880
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        - --controller-group-metrics=all
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        readinessProbe:
          httpGet:
            path: /readyz
            port: apiserv-health
        ports:
        - name: apiserv-health
          containerPort: 9880
          protocol: TCP
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir:
          medium: ""
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccountName: "clustermesh-apiserver"
      terminationGracePeriodSeconds: 30
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  k8s-app: clustermesh-apiserver
              topologyKey: kubernetes.io/hostname
            weight: 100
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium

spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.17.0@sha256:022c084588caad91108ac73e04340709926ea7fe12af95f57fcb794b68472e05"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          # livenessProbe will kill the pod, we should be very conservative
          # here on failures since killing the pod should be a last resort, and
          # we should provide enough time for relay to retry before killing it.
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 10
            # Give relay time to establish connections and make a few retries
            # before starting livenessProbes.
            initialDelaySeconds: 10
            # 10 second * 12 failures = 2 minutes of failure.
            # If relay cannot become healthy after 2 minutes, then killing it
            # might resolve whatever issue is occurring.
            #
            # 10 seconds is a reasonable retry period so we can see if it's
            # failing regularly or only sporadically.
            periodSeconds: 10
            failureThreshold: 12
          startupProbe:
            grpc:
              port: 4222
            # Give relay time to get it's certs and establish connections and
            # make a few retries before starting startupProbes.
            initialDelaySeconds: 10
            # 20 * 3 seconds = 1 minute of failure before we consider startup as failed.
            failureThreshold: 20
            # Retry more frequently at startup so that it can be considered started more quickly.
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
        
      restartPolicy: Always
      priorityClassName: 
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.13.1@sha256:e2e9313eb7caf64b0061d9da0efbdad59c6c461f6ca1752768942bfeda0796c6"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.13.1@sha256:0e0eed917653441fded4e7cdb096b7be6a3bddded5a2dd10812a27b1fc6ed95b"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-ingress-class.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: cilium
spec:
  controller: cilium.io/ingress-controller
---
# Source: cilium/templates/cilium-ingress-service.yaml
apiVersion: v1
kind: Endpoints
metadata:
  name: cilium-ingress
  namespace: kube-system
  labels:
subsets:
- addresses:
  - ip: "192.192.192.192"
  ports:
  - port: 9999
