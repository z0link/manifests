---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTW1BQTlGZDVJTDBOZ1hrTmZTODg2REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeE1UVXlOalU0V2hjTk1qWXhNVEl3TVRVeQpOalU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGRxeHFJTE1PMFkvVGdlZFFJNTkxNDVnT0VvdUh1YnVwdzMrcXREVGJHaXBhNGZGb1IKYmttbXlSS3FTMWsrWVhqeHlObFhVY21VVTcyam1QS1hIL2tRL01kNEtqeGZDdmdkd1cvYUYreHd6d1luTnFiRApPQTl4TW5iMmE2dnYxNmIxOU9RZzdwSDRoZjdsYVM5cEg4ckJwQzRuSGQ4d29yWjFpWHJWUTZ6Y1VReUYzRmUzCjVDRmNjV0FkWmhzckplSDlsa2tjeHB6NlNIMnVlbmUrUlZ4YUI0OFM3bVk1a2VWUTY0dVUyS0RyODBuVFFvc3UKUWJORENHcG5TM1M5Y05jSkxvbTd1cTRVcDVKZlcvWHJPVytFem11cUdmcXhPamY2dlNQMVlZb3EwZGhCSjhlcgpBZ1VLOStmTkdtMEZITm9OekVsSTNaUGVLWXRYUWFYU2E5dlZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVUWWVwajI0NkJUSUdDNElSSjJoMTArWXdYOGN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBZG5oRTlaaFllL3VIcXgvck1VQ2E3RFcrZ282ajM0NGdNYUhEMmoyYUw1eUg3V3RGcElKOU84Cm9DOFNKYjRjT0ZVbUR6di9QVjJ3NTNIb2xvTXB5OGhLTy83UlV5ZjhrQ0lzRjJnelQweWZlbCtLVUpET2NNV2YKVklVUGlKRERIeW81djBPd1F2TFNSWkpndW5mN2dOa2YyV3ZyeGgzOTNCZ2NFaU5hMHFvR0RRbGdOVGlWdFN6QQoveWZwZTc2akVRcUQvZXc4dG5pM2Y2OGNiVVpHQ2c0cWhsWVBEL2xyeC9EVkpudmNKU2FiMVNjMlBiQzZDTm5EClcwRTljYXN5WmxzRHgybnY0SGFyNUl1VjU5Z1A0NllxS1RYb0lsV0llems4bUpsUmx5eVdzTDgxcGNmS0JXdTIKWHVQbWlEWDFDN3kzL3JtSHhoSE1uSHhOY2dsQm9XST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM2FzYWlDekR0R1AwNEhuVUNPZmRlT1lEaEtMaDdtN3FjTi9xclEwMnhvcVd1SHhhCkVXNUpwc2tTcWt0WlBtRjQ4Y2paVjFISmxGTzlvNWp5bHgvNUVQekhlQ284WHdyNEhjRnYyaGZzY004R0p6YW0Kd3pnUGNUSjI5bXVyNzllbTlmVGtJTzZSK0lYKzVXa3ZhUi9Ld2FRdUp4M2ZNS0syZFlsNjFVT3MzRkVNaGR4WAp0K1FoWEhGZ0hXWWJLeVhoL1paSkhNYWMra2g5cm5wM3ZrVmNXZ2VQRXU1bU9aSGxVT3VMbE5pZzYvTkowMEtMCkxrR3pRd2hxWjB0MHZYRFhDUzZKdTdxdUZLZVNYMXYxNnpsdmhNNXJxaG42c1RvMytyMGo5V0dLS3RIWVFTZkgKcXdJRkN2Zm56UnB0QlJ6YURjeEpTTjJUM2ltTFYwR2wwbXZiMVFJREFRQUJBb0lCQVFER1Fsc2dvS2tKbHIxVwphS0IwdHEwbmpOSm90eVpNRTNnc0xKbkEzYWk0T3d4RFJUVnBrYkxlTWNrMzl0eURKcnI5eGg1ZU14Q1FVYld6CnRRQ0VtbHd5RFdSNjNZdlJsZ1lFMXhZcmdtby9HMnJ0ZDd2L3J3eGd1am9jZklEenEzWHhWbThUNVUwNWN0OWcKWUl1L0FtaGVlWEd1R3RHY3RtdHJCT09RQzA5NFhIb2tERjIwb0MzZ3ZWcUttUGNHTyt3QlYyY3BiN1dkS1k2RApKM2VWYjR6YVJvVHRnSDBMcGJMSHJtczBMVU5oaTdFanpKY2RENVlBcytaLzhzc1BYRTRRVHovVENSM24yZFlRCms4U2VSV0loTGVQQnN2V1VwTi83RWxFY3NxTTJCdTJ1Q1VpaFRwUmdxenFHSEZoaFNjb0l5RUVnaFV6bEQ4M3gKaXlXUDNYeWhBb0dCQU40aXJpWWdhcTdWWGFCLy9iclhjaDVZZk9lWVlGcVlYRVFUM1FScnM2c0JrajExVlB0WgoydkxBUUwwT3RRVGlJQlRaOG5zODFITjFONkJIVHlvRkhZYTZDd2loQ0dIZDFGL2JWQTM2eGd1b3JJMytzSXhGCndUcWJtYzY4UVc4WlZBd1lqemRuNGRYYWV4ZENyWCtCdjRyb0tZRWlLbGhPZUhKYW5FWE5heGlQQW9HQkFQOTIKTWFVaHF4NjlRUHNEQjkzdjV4MThXRmJiWnpUeHptZmd2em1MNklIQUVzc20yaDBtb1I0S2ZzVko1dG9oY3JGbApFMHBJME1jZld3TkV6a3gxSTlldHV5UGdXQUt5bmEzeUZPRjNjb1BNOS9QQXcrMWJIRDJnQzQ1UmRqSk16eFhCCkFXd054dVBDUVlJOGFUc1dzYU5XNCtaNW5penlSUlpUWEVrNTJrOWJBb0dBTjhZUFljVkw0Ly93bFNidHh5Ym4KSVZWb2J5SGtOM3IvMTV3QkoyWC9ZNVZ1YVgzM1MzRGhONGdyK1F3alNVbVpjb0xTamp6VXZ2U1VkZXJScHFSSQpLSmEzeEgvaVFlaFh0WVcxVWhrLzlwZHdVK3E1MjA1OFdNSE8yWWlOQ1Y4YnFqblVZNzN5aHlabk40em5VUmQ3CngxM0paZ0gxRGQwT0F2QmJRbTkwVDJNQ2dZQno3UUxpV01ENmxnOWkyU0U4eVowcmVEM3VUR290VUgzR0RlczUKQmhCZ3NQVFdVNjh2QTFTaCtVbEY1aDlvWlQxUzJ2ZENBb0VibTFNRnpMZUJZcmI5TE0xN25sYlNBcFFqVjNPNgpUU1llUVdsVHArcEJUOU1rOC9mS2daVU5obVdERGE3RGhnejNWak84RWdYKzFuR09HZVFadHA3YzdxUURXWmpMCmNnRnJlUUtCZ0h6ZWVwelZXODdLTGdWU0VyeXhIYkUyeXBDM1JjcjFWN0NvTkQwclNJb3VCeXdEVXpxUC9hbloKdjlTNE9vbHdTeVpFaDBaTWs4djdNbmR6UTByczhZa3FKUzg4UC9leTRsd1N2d3hRNGhvdkZGR0x6anN0aG1JdwpHa1QzbUp5b3JEenBncUgyUzNERkFZek9ET1o2VndqaHRPWjZuQU9yZ2JScUQyaENtbVdCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTW1BQTlGZDVJTDBOZ1hrTmZTODg2REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeE1UVXlOalU0V2hjTk1qWXhNVEl3TVRVeQpOalU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGRxeHFJTE1PMFkvVGdlZFFJNTkxNDVnT0VvdUh1YnVwdzMrcXREVGJHaXBhNGZGb1IKYmttbXlSS3FTMWsrWVhqeHlObFhVY21VVTcyam1QS1hIL2tRL01kNEtqeGZDdmdkd1cvYUYreHd6d1luTnFiRApPQTl4TW5iMmE2dnYxNmIxOU9RZzdwSDRoZjdsYVM5cEg4ckJwQzRuSGQ4d29yWjFpWHJWUTZ6Y1VReUYzRmUzCjVDRmNjV0FkWmhzckplSDlsa2tjeHB6NlNIMnVlbmUrUlZ4YUI0OFM3bVk1a2VWUTY0dVUyS0RyODBuVFFvc3UKUWJORENHcG5TM1M5Y05jSkxvbTd1cTRVcDVKZlcvWHJPVytFem11cUdmcXhPamY2dlNQMVlZb3EwZGhCSjhlcgpBZ1VLOStmTkdtMEZITm9OekVsSTNaUGVLWXRYUWFYU2E5dlZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVUWWVwajI0NkJUSUdDNElSSjJoMTArWXdYOGN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBZG5oRTlaaFllL3VIcXgvck1VQ2E3RFcrZ282ajM0NGdNYUhEMmoyYUw1eUg3V3RGcElKOU84Cm9DOFNKYjRjT0ZVbUR6di9QVjJ3NTNIb2xvTXB5OGhLTy83UlV5ZjhrQ0lzRjJnelQweWZlbCtLVUpET2NNV2YKVklVUGlKRERIeW81djBPd1F2TFNSWkpndW5mN2dOa2YyV3ZyeGgzOTNCZ2NFaU5hMHFvR0RRbGdOVGlWdFN6QQoveWZwZTc2akVRcUQvZXc4dG5pM2Y2OGNiVVpHQ2c0cWhsWVBEL2xyeC9EVkpudmNKU2FiMVNjMlBiQzZDTm5EClcwRTljYXN5WmxzRHgybnY0SGFyNUl1VjU5Z1A0NllxS1RYb0lsV0llems4bUpsUmx5eVdzTDgxcGNmS0JXdTIKWHVQbWlEWDFDN3kzL3JtSHhoSE1uSHhOY2dsQm9XST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRYlJXdi9oMTZYS1RYWjhjYUV5Y1lwREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeE1UVXlOalU0V2hjTk1qWXhNVEl3TVRVeQpOalU0V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDaDNuZHhTcjRBWmtsZlRhSldzejlUUWM4VUlRVDkKNnE4dys1SEd1NmZvdU5OeThFNjIrRnhxeTMvcGxTUE5xSkpydGw0cVVJWlRuMTR3MExMOVAweFBBdmRCYkNMSQp2a3MybXdWUGNTM01ZUkhlUlU1Vy9ZZEN0Qmw1UVNQNWY4Q045MkJJK3pFdFZ5djRDVzM4QWFhZzhQdVFrNGl5CnlCWldneXVVcVcvOEI4S20xUEJhMVhrcmx4eVYycUduQktlemRGc2Nna0hHUlU5N21rNnFRSmJpV25UdU15cnMKb1VKcS81SDZDTGd1dHcxdUcvOHFDSUljL3IwU2d3b3J2a0JxWXkzS0gzM0drblBOMVdya2lndFc2L3IyS3RhbwpxYzBHbjlIUEVUVXVJMTY2Rk9qREV6K3N3NWdsUXpCTmJLeFhvWXVCaUk1NVpNenRRdXlVZGFVWEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZFMkhxWTl1T2dVeUJndUNFU2RvZGRQbQpNRi9ITUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFjVU1tU3Y5NnJMaEdLNjhrWW9kb2NTMnRPaEc3NDNwcWZnVlNCMUt4SDBVdDc4Z0QKb2oyN0w4VXFTL3pOMlhEOGJjRGp5QmVZMkp6Y1dycDA1UVk1anJqTmVPeCt0REtYdlRSMS80SU02TnZaWUpZTwpCamt4ZXR2Mk96and3dS9MeWg4bmNkeDI5OTVoNGlJSkgyUnk3SmgxQ29Bc2RLZFFLMmgyYzJCeUttbWE5aVg5CjdKT1NlYUxSemFEVlpPdjM5RWNJWGNPRDJTRTd0d0JsY3p5RjI5amhCQ0VlMVVoUXFSanM4K3NVYzFLMVJoa0wKaXZQM2FxYmlWSmZpd3NmcjYzY0hSZEc5VDF5dElrLzdmWlNVYTZqdHNBMFRJZEh3cFFIaWswNHZlemsxMFQzRApLanNxYldnLzZUQnNveTliLzEvNEJ6R09td0FLNG5PZW0zRWt4Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb2Q1M2NVcStBR1pKWDAyaVZyTS9VMEhQRkNFRS9lcXZNUHVSeHJ1bjZMalRjdkJPCnR2aGNhc3QvNlpVanphaVNhN1plS2xDR1U1OWVNTkN5L1Q5TVR3TDNRV3dpeUw1TE5wc0ZUM0V0ekdFUjNrVk8KVnYySFFyUVplVUVqK1gvQWpmZGdTUHN4TFZjcitBbHQvQUdtb1BEN2tKT0lzc2dXVm9NcmxLbHYvQWZDcHRUdwpXdFY1SzVjY2xkcWhwd1NuczNSYkhJSkJ4a1ZQZTVwT3FrQ1c0bHAwN2pNcTdLRkNhditSK2dpNExyY05iaHYvCktnaUNIUDY5RW9NS0s3NUFhbU10eWg5OXhwSnp6ZFZxNUlvTFZ1djY5aXJXcUtuTkJwL1J6eEUxTGlOZXVoVG8Kd3hNL3JNT1lKVU13VFd5c1Y2R0xnWWlPZVdUTTdVTHNsSFdsRndJREFRQUJBb0lCQUVkb0s0cm43UCtpSC9ZUgorbTZDN29tYysyd20wTnZ1M3RBZCtvWVFISmQyaVprbjE2R3gySnNvSU1wN2gycmZWWkI4eC9la3hFMDVmY1ROCkhGakp4ckVJWHVrV2VoWFNsTDJIRDRXbktRd0RPbTJ5WjBmSzJoT2IvYXpYQnJhM0c4dkUrRTNadWkwRlNwbEcKRjZYWFdKbWhGV2tISElPNTd0akZUc0ZyS2NLbE9pZkEyQ0U0MzVDS002OXd2M0dnRlhVV3cvNlFKemRHMi8zYQpuS0dEZzQ0ZDNGdE1wK0dteWtLQkRHc0Qwa2MxS2doZ3JERng3aGFMdGtaNWdpeXlPSk43SVJYMmlIVUlWTzJGClNWNVZ2TjBTYW41Y0JKQzVTdWMreEdEV3NWREswNmFpTVN3Z0lXL3IxOUhpNnpCckpkQ0drSHlXUC8vc0ZzUFoKS2hKS0Z3a0NnWUVBekMvMmZYM2xqK0ZXd2RXMHl1QWVuWlNzZ0hqZC9FZktKZk00QnA4ZnRzc0V3OWlaaVZ4YwpWaTVoL005VVUza013cHYwT2w2T2tOUzRkU2E1aGJuQkczeDhSWUl6UlFDeFN6b0tNQ2w0bGQvdlNoYXZqeXJxCmtPT0ZWOFlUM05JZU4wbHA3aDh3UVZmOTREeDl0WWZONGRDK2FOSjZNWDB0TjBWMWM0dUJNLzBDZ1lFQXl2Ri8KbjhQVE5MOGxLTmJtbE9LblVnNEdodjZHa05GVm5aekRJV2kyamoyeTRBTmdmVjhWZlJiV29uVU9WQi9ZK3pZNQp3YTFLRStyOXpDWEZJeXBBdjNsZCtPak1wcHg4UWtRcmdocDhkVUVEeTlpNGlZTzc3VEV4dTQ0VGVNcEhRb0ZLCkoycDRRTkl5a29BVE5MeVYzMC9aLzB5QlJDbnUrQzdXbnRjK0o2TUNnWUFYOStWYVU4WDN2cjdkWUFXcDd1Y0oKSG1PbGJRcTV5MytLTnVPenUwZ1F3QUllTHpYT3J2M1R5L3dLbmhmSytLR3Iwbnkzd1ZQQTRvZUlrUFFrSTJycwpuQTlHWllNNUxWeWlkUHl2TEo4UUVNcFpDeEt1bnA0TVJmam9GY05OSDRrV2VsS3A5aFZIQmxveDBVZjhZQ1dsCnhVZ2txOWhXS05oKzdYTmREZG9yelFLQmdCY3o5MWlINWkwQXNibnlvQmhqdGFldkROWUFZZGhLNXRRSGFWUDMKaWUvSFpCMHlwYVNQNjRBS3pXMXpucmpGajJSaGRjY01EZzBxNyt1WVllcThXUHpMWHBBbjVjWWkzQjRqZHluLwo1enpzdXdkaWR1N2FEZkYzajIwWE9HaTJEK0d0c0pIREhZNmp1YjZBUURIbVllaFBVK2haa2VuK05XRlEwWjhGCmt3aXJBb0dBWDIxTkY0NzBXditPam1PZEdnZzhrUFRseE1DTlk0LzhWR3l1NVVpOVN3WDBjUDhNNG8vSHlaZVYKQklSMW50cUJSejlybjdNL1oxMG5QdVhpK0h6bllIRHFpaElDM2JLV2hCN3JjZU8rcVRoSk5LbUpOWmFWNG9PNwpiQ2J3dmxNbEkyM21Qd1J1Y0pHU255WUZnbkEzajRRSzlLVVlGQzdLY0FXNGtzNTV3Y0E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTW1BQTlGZDVJTDBOZ1hrTmZTODg2REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRJeE1UVXlOalU0V2hjTk1qWXhNVEl3TVRVeQpOalU0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGRxeHFJTE1PMFkvVGdlZFFJNTkxNDVnT0VvdUh1YnVwdzMrcXREVGJHaXBhNGZGb1IKYmttbXlSS3FTMWsrWVhqeHlObFhVY21VVTcyam1QS1hIL2tRL01kNEtqeGZDdmdkd1cvYUYreHd6d1luTnFiRApPQTl4TW5iMmE2dnYxNmIxOU9RZzdwSDRoZjdsYVM5cEg4ckJwQzRuSGQ4d29yWjFpWHJWUTZ6Y1VReUYzRmUzCjVDRmNjV0FkWmhzckplSDlsa2tjeHB6NlNIMnVlbmUrUlZ4YUI0OFM3bVk1a2VWUTY0dVUyS0RyODBuVFFvc3UKUWJORENHcG5TM1M5Y05jSkxvbTd1cTRVcDVKZlcvWHJPVytFem11cUdmcXhPamY2dlNQMVlZb3EwZGhCSjhlcgpBZ1VLOStmTkdtMEZITm9OekVsSTNaUGVLWXRYUWFYU2E5dlZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVUWWVwajI0NkJUSUdDNElSSjJoMTArWXdYOGN3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBZG5oRTlaaFllL3VIcXgvck1VQ2E3RFcrZ282ajM0NGdNYUhEMmoyYUw1eUg3V3RGcElKOU84Cm9DOFNKYjRjT0ZVbUR6di9QVjJ3NTNIb2xvTXB5OGhLTy83UlV5ZjhrQ0lzRjJnelQweWZlbCtLVUpET2NNV2YKVklVUGlKRERIeW81djBPd1F2TFNSWkpndW5mN2dOa2YyV3ZyeGgzOTNCZ2NFaU5hMHFvR0RRbGdOVGlWdFN6QQoveWZwZTc2akVRcUQvZXc4dG5pM2Y2OGNiVVpHQ2c0cWhsWVBEL2xyeC9EVkpudmNKU2FiMVNjMlBiQzZDTm5EClcwRTljYXN5WmxzRHgybnY0SGFyNUl1VjU5Z1A0NllxS1RYb0lsV0llems4bUpsUmx5eVdzTDgxcGNmS0JXdTIKWHVQbWlEWDFDN3kzL3JtSHhoSE1uSHhOY2dsQm9XST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU1uNTgzcm1UeHNXZy9LRUdvMEFKVFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeU1URTFNalkxT0ZvWERUSTJNVEV5TURFMQpNalkxT0Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5LdS9NWnQ5M1BMTnZjWDJabC8KZ25vTnNmZ3VsTlpHWGFBQUdUbnpHMWl1SVVjOGI1L2M4a2pzWWQxeE5iRXZ3MHdCSzZGOXhUeHFIRnU0NURZeQphTTFSczVuZ3pnWklDdXlNMFd3Q2VzU2pzMk5ZN0J4TjRkZEZPRFpuMy9JVGhiWjNnUlFBVzdBU3c2dVY4L1N5Cm16Ny9kZWo2dG85OVRxNFlqdXV2MGJrcVBBSHZVUnZvbnJ2a1BjNXVZdFJBamtlZDBWZjMyQW1YSzFQb29hSHAKaUozdEVTaEhWc0FUTTFqS3pyRDFSajNzNElmZVIremllSnFoNWxNTXpwMnZKRmkweTNBdGpiSWZqRVRGWnkrZwpONjNlSTZMK3hhYTdVZjVkb2poMEtCVnBYWERsbTZ6aGViOFhkWXVXRFR5dGJLbzMvWnNZQnpoVEtMSTRlaWpRCnpUVUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVRZZXBqMjQ2QlRJRwpDNElSSjJoMTArWXdYOGN3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWV1UFd1TnZzQnlaZksvdnh5alk3c2dIMUVkYm8KZUk0MVRqdEM1UkE1VjJNVXloNmh0c3QzNHNJTVh1U2lhUm1VVEJubTg0RnV3NVhPWGtaa3M5djhpOFUyRjM5RAo4RHgzSEpEbDcvR0RMNTllYjJPRU5xRk40ZEcyM3Y1clJmVkVGTHFqbWk1UnNZQnZpZ1lFSmh3dWNzTTVFekQzCjhOcnN2V201anB3L0FsM3Q5SUIzdU1FRWgyb1ZaN016TTJvaGJkMyswbU41UE94djYzby9FMVRWeWg5VEZIazMKL2oyN0tQUUxCRHdEV0ZxTTk4N25ubE94MUpxZTd1eGFZbVNIT3lrZnVXaitEdnBsODdVdkF1ZmJoOUNqa1ZiWQo4bjM0aHVQRW9wUGZIbG9vbnZzaURKeTEyNzVPRSswRzdnS1RkbWdLUjl4bTgyNFZtbTdPbzQ2R2ZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMHE3OHhtMzNjOHMyOXhmWm1YK0NlZzJ4K0M2VTFrWmRvQUFaT2ZNYldLNGhSenh2Cm45enlTT3hoM1hFMXNTL0RUQUVyb1gzRlBHb2NXN2prTmpKb3pWR3ptZURPQmtnSzdJelJiQUo2eEtPelkxanMKSEUzaDEwVTRObWZmOGhPRnRuZUJGQUJic0JMRHE1WHo5TEtiUHY5MTZQcTJqMzFPcmhpTzY2L1J1U284QWU5UgpHK2lldStROXptNWkxRUNPUjUzUlYvZllDWmNyVStpaG9lbUluZTBSS0VkV3dCTXpXTXJPc1BWR1BlemdoOTVICjdPSjRtcUhtVXd6T25hOGtXTFRMY0MyTnNoK01STVZuTDZBM3JkNGpvdjdGcHJ0Ui9sMmlPSFFvRldsZGNPV2IKck9GNXZ4ZDFpNVlOUEsxc3FqZjlteGdIT0ZNb3NqaDZLTkROTlFJREFRQUJBb0lCQUZ1YWgvK0M2cmVuSU9QNApzNzBBNnV0RXJ4L1lxUkF0a2lHeVNVV2dCVURlblV1SzVJSGVvRjNDb1o2VnphR1h3ZE4zSXRCWmpmdUJxNGpaCjhDZjhiUUx3eGlWZTBGVjgxM3NZa3luaVBoem5qR1RpMGU1UWtxUjF6VVlpamdXRUpYdzdvNXpkdHYvc2VMVlAKUXI0Zk5rOEM1ZktCcUFUbGwrTXNmRi9QbDJGcFNLK0FodW1USXhzU1JoVS9jUThWVFlPK001UXlUVWdTUHdONAplZFNKQ01qSXI4VWE2dWE4eDJaOTRxR2NwY2hIWklVanFNVitWckV4c3ZXZDZoOHVSekFNelVaQzg5V1pIbXkwCkl4UFJTeXZUazhIUGJNa0tOMldjd0ZYdjVmQUNtNFVaQkZGOHA5cG1MRGZwQzlsSjkrdmtQRmVsMnNQMDMxSmoKMWovMFdxRUNnWUVBNTZqTlFyTHJoRUJsZDUwYktkc0ZCOWRCZVo2S0lOdldxUkltc3paSTRLSWxFMS9JanY5WQp2YjQyK1ZxVUtDcnRJc1p4OEZpR1Fpekw3WTc0QVVtdm9uQklxRDIyRjZPVzVBdU9JcGhYOEdPb0gxclpqbU5PCm5Edi9QSVpQNGJqSkhIcGtzRzNCZDlsRThkcmVEenZEQzVaelQyREpRbGhNK0lNeTdXVHN3STBDZ1lFQTZOSDUKci9ONkl4aWhxckprMnY3eGIvekdVd3lQRS9RV2RWS0pDcThnTldjZVFwRWFQV3Q1QndhaWhXazNaRi83U1hZaQpxalJOVENYTVlCcysxemY3ZGhtVlNBeVBuQUFZemtOejRFMTNXSTVkdXRvU1JhMjI5OVJSUi9HTWhJZzZ4andVCmdUK1o5bXkxVm5SNEsvc1lkTmZsdENyUlJITTJlOTh0M1V6SXVVa0NnWUFHT1lueWJkNVlPbWEvbFJBaXlzalMKMGh6blNMUkxkN3pINUQzMytOQnlnTWpnUVdXaE9nbEhaL0lRTnpmZDhIRll5dDVLNkFZTGh5cWZvb1RWZkFabApKZ0U5ekJLMWhlYkxEK2hzMDQwaFgzd29BNGZ2QklvYk5wMkFJZGZKcCs1M2ZtNXdNekxNcHFEc29zWHV3TnRYCjExNFgxdkR4Z0cvcENaVjN2WXVERFFLQmdRQ0hkUE5pemJQNEMzSzBEOHJpSjRadGM1SW42NXlyTFU2THdCTi8KcGRpRmVaTi9nMURTLzE2Ukdla2cyZENpazcxdVJrOXcyN0ZGWnBCOE1oM2p0ZXlXRDloczdQSDQvNDF2Skl1YwpxeldPem5YMktyNkt6OEV1ZTljMmxuRDlBdzIvSEdHSnVXbG9tR01CQkE2TytDNklmTHhta0tya3VtdXVzbkRLCjJzdkdFUUtCZ0ZrUmxDd05lMS9DZE9oWml6Q3FDUXpJdCtjSnBBRVpMbDcydmRFYjh6R1g5bURmNVVOYmpqYXcKM3Fvd2JZRTQzeC80MjR6Y2lwNWtzaXQ5ZjRYYnNVZ29BZXVIRjdncEY3QTBFR2U4aERPMW01cXc1K05WQTVMTQpBWW0zK1JqUDkxbEIzVW9TVk9FUmRtc1JuMFpEdk41ZzA2WmQzb29qcS9NUHFTUWdlbHo1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  routing-mode: "native"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.120.0.0/14

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-mode: "dsr"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  k8s-require-ipv4-pod-cidr: "true"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "false"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "true"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: "api.zerolab.link"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "api.zerolab.link"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.zerolab.link"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          privileged: true
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "8cc1432c0ad70143d4ffc3411762b5727e8701da030048aca82ee80d51a42242"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.4@sha256:f0f05e4ba3bb1fe0e4b91144fa4fea637701aba02e6c00b23bd03b4a7e1dfd55"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "api.zerolab.link"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - effect: NoSchedule
          operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.4@sha256:ca81622fd9f04c1316bf4144bde5dbce613758810f6022f6c706b14c9c0815db"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.1@sha256:9e5f81ee747866480ea1ac4630eb6975ff9227f9782b7c93919c081c33f38267"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.1@sha256:1f86f3400827a0451e6332262467f894eeb7caf0eb8779bd951e2caa9d027cbe"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
